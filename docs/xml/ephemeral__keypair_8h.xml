<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ephemeral__keypair_8h" kind="file" language="C++">
    <compoundname>ephemeral_keypair.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="ecdsa_8h" local="yes">ecdsa.h</includes>
    <includes refid="eckey_8h" local="yes">eckey.h</includes>
    <includes refid="crypto__engine_8h" local="yes">crypto_engine.h</includes>
    <includes refid="identity_8h" local="yes">identity.h</includes>
    <includedby refid="node_8h" local="yes">src/crypto/node.h</includedby>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <includedby refid="wickr__ctx_8h" local="yes">src/crypto/wickr_ctx.h</includedby>
    <incdepgraph>
      <node id="213">
        <label>stdbool.h</label>
      </node>
      <node id="220">
        <label>kdf.h</label>
        <link refid="kdf_8h_source"/>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>identity.h</label>
        <link refid="identity_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>stdint.h</label>
      </node>
      <node id="209">
        <label>stdlib.h</label>
      </node>
      <node id="225">
        <label>storage.h</label>
        <link refid="storage_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>devinfo.h</label>
        <link refid="devinfo_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>src/crypto/ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>limits.h</label>
      </node>
      <node id="224">
        <label>root_keys.h</label>
        <link refid="root__keys_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>cipher.h</label>
        <link refid="cipher_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>eckey.h</label>
        <link refid="eckey_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>stdio.h</label>
      </node>
      <node id="218">
        <label>crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="231">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h_source"/>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>src/crypto/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>src/crypto/ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
      <node id="229">
        <label>src/crypto/protocol.h</label>
        <link refid="protocol_8h_source"/>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__ephemeral__keypair" prot="public">wickr_ephemeral_keypair</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ephemeral__keypair_8h_1a9cab1e05b428cb91297620a40b6cef16" prot="public" static="no">
        <type>struct <ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair</ref></type>
        <definition>typedef struct wickr_ephemeral_keypair wickr_ephemeral_keypair_t</definition>
        <argsstring></argsstring>
        <name>wickr_ephemeral_keypair_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="84" column="1" bodyfile="src/crypto/ephemeral_keypair.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__ephemeral__keypair_1gab956214203938b4b02b8f30666eaec3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
        <definition>wickr_ephemeral_keypair_t* wickr_ephemeral_keypair_create</definition>
        <argsstring>(uint64_t identifier, wickr_ec_key_t *ec_key, wickr_ecdsa_result_t *signature)</argsstring>
        <name>wickr_ephemeral_keypair_create</name>
        <param>
          <type>uint64_t</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
          <declname>ec_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref> *</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an Ephemeral Keypair from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>the numerical identifier of the keypair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ec_key</parametername>
</parameternamelist>
<parameterdescription>
<para>an Elliptical Curve public keypair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>a signature of the public key material in &apos;ec_key&apos; by the owner of this key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated Ephemeral Keypair, owning the properties that were passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ephemeral__keypair_1gacf14f050221091093b9a2948bd569662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
        <definition>wickr_ephemeral_keypair_t* wickr_ephemeral_keypair_copy</definition>
        <argsstring>(const wickr_ephemeral_keypair_t *source)</argsstring>
        <name>wickr_ephemeral_keypair_copy</name>
        <param>
          <type>const <ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an ephemeral keypair</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the ephemeral key pair to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated ephemeral key pair holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ephemeral__keypair_1ga6c0935c579e3d4bdbfeada7cb60c2a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
        <definition>wickr_ephemeral_keypair_t* wickr_ephemeral_keypair_generate_identity</definition>
        <argsstring>(const wickr_crypto_engine_t *engine, uint64_t identifier, const wickr_identity_t *identity)</argsstring>
        <name>wickr_ephemeral_keypair_generate_identity</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>identity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a new ephemeral key pair given an owner identity.</para><para>This method will use the &apos;default_curve&apos; property of the crypto engine provided as the curve for the resulting keypair</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto engine supporting random Elliptical Curve generation, and ECDSA signatures </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier to assign to the generated output keypair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identity</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity to sign the generated output key pair with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly generated random Elliptical Curve key pair with identifier &apos;identifier&apos; and a signature using the &apos;sig_key&apos; property of the identity provided as the signing key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ephemeral__keypair_1gadc17110d4c7fa65a9456fae516bf2e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wickr_ephemeral_keypair_verify_owner</definition>
        <argsstring>(const wickr_ephemeral_keypair_t *keypair, const wickr_crypto_engine_t *engine, const wickr_identity_t *owner)</argsstring>
        <name>wickr_ephemeral_keypair_verify_owner</name>
        <param>
          <type>const <ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
          <declname>keypair</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify the owner of an ephemeral key pair is a particular identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keypair</parametername>
</parameternamelist>
<parameterdescription>
<para>the key pair to verify the owner of </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine that supports verifying signatures generated with the curve associated with the &apos;sig_key&apos; property of owner </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>the proposed owner of this keypair </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the signature of key pair can be verified with the sig_key of owner </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ephemeral__keypair_1ga2e2f8db184aa2972ef5423e9c03988e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ephemeral_keypair_make_public</definition>
        <argsstring>(const wickr_ephemeral_keypair_t *keypair)</argsstring>
        <name>wickr_ephemeral_keypair_make_public</name>
        <param>
          <type>const <ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
          <declname>keypair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy the private components of the keypair</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keypair</parametername>
</parameternamelist>
<parameterdescription>
<para>the key pair to make public </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ephemeral__keypair_1gab77107c0b1a0d145c606817eeecec63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ephemeral_keypair_destroy</definition>
        <argsstring>(wickr_ephemeral_keypair_t **keypair)</argsstring>
        <name>wickr_ephemeral_keypair_destroy</name>
        <param>
          <type><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> **</type>
          <declname>keypair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an ephemeral keypair</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keypair</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the key pair to destroy. All properties of &apos;*keypair&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/ephemeral_keypair.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ephemeral_keypair_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ephemeral_keypair_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ecdsa.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;eckey.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto_engine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;identity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structwickr__ephemeral__keypair" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structwickr__ephemeral__keypair_1a9220b37a7db764818406bcc84e3ba86b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structwickr__ephemeral__keypair_1a9220b37a7db764818406bcc84e3ba86b" kindref="member">identifier</ref>;</highlight></codeline>
<codeline lineno="62" refid="structwickr__ephemeral__keypair_1ad730ed9ba92e05d0a271edc838e548fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref><sp/>*<ref refid="structwickr__ephemeral__keypair_1ad730ed9ba92e05d0a271edc838e548fe" kindref="member">ec_key</ref>;</highlight></codeline>
<codeline lineno="63" refid="structwickr__ephemeral__keypair_1aea420be2397d798a560fa973be86228c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref><sp/>*<ref refid="structwickr__ephemeral__keypair_1aea420be2397d798a560fa973be86228c" kindref="member">signature</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair</ref><sp/><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*<ref refid="group__wickr__ephemeral__keypair_1gab956214203938b4b02b8f30666eaec3b" kindref="member">wickr_ephemeral_keypair_create</ref>(uint64_t<sp/><ref refid="structwickr__ephemeral__keypair_1a9220b37a7db764818406bcc84e3ba86b" kindref="member">identifier</ref>,<sp/><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref><sp/>*<ref refid="structwickr__ephemeral__keypair_1ad730ed9ba92e05d0a271edc838e548fe" kindref="member">ec_key</ref>,<sp/><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref><sp/>*<ref refid="structwickr__ephemeral__keypair_1aea420be2397d798a560fa973be86228c" kindref="member">signature</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*<ref refid="group__wickr__ephemeral__keypair_1gacf14f050221091093b9a2948bd569662" kindref="member">wickr_ephemeral_keypair_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*<ref refid="group__wickr__ephemeral__keypair_1ga6c0935c579e3d4bdbfeada7cb60c2a1b" kindref="member">wickr_ephemeral_keypair_generate_identity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/>*engine,<sp/>uint64_t<sp/><ref refid="structwickr__ephemeral__keypair_1a9220b37a7db764818406bcc84e3ba86b" kindref="member">identifier</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*identity);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ephemeral__keypair_1gadc17110d4c7fa65a9456fae516bf2e5d" kindref="member">wickr_ephemeral_keypair_verify_owner</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*keypair,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/>*engine,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*owner);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ephemeral__keypair_1ga2e2f8db184aa2972ef5423e9c03988e8" kindref="member">wickr_ephemeral_keypair_make_public</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*keypair);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ephemeral__keypair_1gab77107c0b1a0d145c606817eeecec63d" kindref="member">wickr_ephemeral_keypair_destroy</ref>(<ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>**keypair);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ephemeral_keypair_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/ephemeral_keypair.h"/>
  </compounddef>
</doxygen>
