<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="storage_8h" kind="file" language="C++">
    <compoundname>storage.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="buffer_8h" local="yes">buffer.h</includes>
    <includes refid="crypto__engine_8h" local="yes">crypto_engine.h</includes>
    <includedby refid="root__keys_8h" local="yes">src/crypto/root_keys.h</includedby>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <includedby refid="wickr__ctx_8h" local="yes">src/crypto/wickr_ctx.h</includedby>
    <incdepgraph>
      <node id="423">
        <label>stdbool.h</label>
      </node>
      <node id="429">
        <label>kdf.h</label>
        <link refid="kdf_8h_source"/>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
      </node>
      <node id="424">
        <label>stdint.h</label>
      </node>
      <node id="421">
        <label>stdlib.h</label>
      </node>
      <node id="420">
        <label>src/crypto/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="425">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>limits.h</label>
      </node>
      <node id="430">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
      </node>
      <node id="428">
        <label>cipher.h</label>
        <link refid="cipher_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>eckey.h</label>
        <link refid="eckey_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="422">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
      </node>
      <node id="432">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
      </node>
      <node id="434">
        <label>stdio.h</label>
      </node>
      <node id="427">
        <label>crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="437">
        <label>src/crypto/identity.h</label>
        <link refid="identity_8h_source"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="435">
        <label>src/crypto/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h_source"/>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="439">
        <label>src/crypto/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>src/crypto/ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h_source"/>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>src/crypto/root_keys.h</label>
        <link refid="root__keys_8h_source"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="441">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
      <node id="440">
        <label>src/crypto/protocol.h</label>
        <link refid="protocol_8h_source"/>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__storage__keys" prot="public">wickr_storage_keys</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="storage_8h_1a4135409ea90c88c30003cb0febbe02e9" prot="public" static="no">
        <type>struct <ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref></type>
        <definition>typedef struct wickr_storage_keys wickr_storage_keys_t</definition>
        <argsstring></argsstring>
        <name>wickr_storage_keys_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="53" column="1" bodyfile="src/crypto/storage.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__storage__keys_1gad03ddd5ea10633ca35097e5f4707d5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_storage_keys_create</definition>
        <argsstring>(wickr_cipher_key_t *local, wickr_cipher_key_t *remote)</argsstring>
        <name>wickr_storage_keys_create</name>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>remote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a storage key set from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remote</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated storage key set. Takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1gad6839a21bca1c28775d51deb6b7c3835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_storage_keys_copy</definition>
        <argsstring>(const wickr_storage_keys_t *source)</argsstring>
        <name>wickr_storage_keys_copy</name>
        <param>
          <type>const <ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a storage key set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the storage key set to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated storage key set holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1gae5631d93182e635fb7f48269eb3f1723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_storage_keys_create_from_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_storage_keys_create_from_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a storage key set from a previously serialized storage key set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer containing the output of &apos;wickr_storage_keys_serialize&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated storage key set or NULL if parsing fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1ga10a0d6e13442682b2fecff2ed753c2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_storage_keys_serialize</definition>
        <argsstring>(const wickr_storage_keys_t *keys)</argsstring>
        <name>wickr_storage_keys_serialize</name>
        <param>
          <type>const <ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a storage key set to a buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the keys to serialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer containing the properties of storage keys in the following format: | CIPHER_ID (LOCAL) | KEY_DATA (LOCAL) | CIPHER_ID (REMOTE) | KEY_DATA (REMOTE) | </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1ga2c1494802577d025d70bf553c43da344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_storage_keys_destroy</definition>
        <argsstring>(wickr_storage_keys_t **keys)</argsstring>
        <name>wickr_storage_keys_destroy</name>
        <param>
          <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> **</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a storage key set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the storage key set to destroy. All properties of &apos;*keys&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>storage_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>storage_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto_engine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structwickr__storage__keys" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structwickr__storage__keys_1a544b35d7a75bd6076f6c34537e49ef6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__storage__keys_1a544b35d7a75bd6076f6c34537e49ef6b" kindref="member">local</ref>;</highlight></codeline>
<codeline lineno="49" refid="structwickr__storage__keys_1a44b6a0b14bcc877cb6799265b060cb28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__storage__keys_1a44b6a0b14bcc877cb6799265b060cb28" kindref="member">remote</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref><sp/><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*<ref refid="group__wickr__storage__keys_1gad03ddd5ea10633ca35097e5f4707d5cb" kindref="member">wickr_storage_keys_create</ref>(<ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__storage__keys_1a544b35d7a75bd6076f6c34537e49ef6b" kindref="member">local</ref>,<sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__storage__keys_1a44b6a0b14bcc877cb6799265b060cb28" kindref="member">remote</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*<ref refid="group__wickr__storage__keys_1gad6839a21bca1c28775d51deb6b7c3835" kindref="member">wickr_storage_keys_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*<ref refid="group__wickr__storage__keys_1gae5631d93182e635fb7f48269eb3f1723" kindref="member">wickr_storage_keys_create_from_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__storage__keys_1ga10a0d6e13442682b2fecff2ed753c2f6" kindref="member">wickr_storage_keys_serialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*keys);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__storage__keys_1ga2c1494802577d025d70bf553c43da344" kindref="member">wickr_storage_keys_destroy</ref>(<ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>**keys);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>storage_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/storage.h"/>
  </compounddef>
</doxygen>
