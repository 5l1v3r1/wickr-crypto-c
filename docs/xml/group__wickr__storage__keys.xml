<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__wickr__storage__keys" kind="group">
    <compoundname>wickr_storage_keys</compoundname>
    <title>wickr_storage_keys_t</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__storage__keys_1gad03ddd5ea10633ca35097e5f4707d5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_storage_keys_create</definition>
        <argsstring>(wickr_cipher_key_t *local, wickr_cipher_key_t *remote)</argsstring>
        <name>wickr_storage_keys_create</name>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>local</declname>
        </param>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>remote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a storage key set from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remote</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated storage key set. Takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1gad6839a21bca1c28775d51deb6b7c3835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_storage_keys_copy</definition>
        <argsstring>(const wickr_storage_keys_t *source)</argsstring>
        <name>wickr_storage_keys_copy</name>
        <param>
          <type>const <ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a storage key set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the storage key set to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated storage key set holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1gae5631d93182e635fb7f48269eb3f1723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_storage_keys_create_from_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_storage_keys_create_from_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a storage key set from a previously serialized storage key set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer containing the output of &apos;wickr_storage_keys_serialize&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated storage key set or NULL if parsing fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1ga10a0d6e13442682b2fecff2ed753c2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_storage_keys_serialize</definition>
        <argsstring>(const wickr_storage_keys_t *keys)</argsstring>
        <name>wickr_storage_keys_serialize</name>
        <param>
          <type>const <ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a storage key set to a buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the keys to serialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer containing the properties of storage keys in the following format: | CIPHER_ID (LOCAL) | KEY_DATA (LOCAL) | CIPHER_ID (REMOTE) | KEY_DATA (REMOTE) | </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__storage__keys_1ga2c1494802577d025d70bf553c43da344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_storage_keys_destroy</definition>
        <argsstring>(wickr_storage_keys_t **keys)</argsstring>
        <name>wickr_storage_keys_destroy</name>
        <param>
          <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> **</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a storage key set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the storage key set to destroy. All properties of &apos;*keys&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/storage.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
