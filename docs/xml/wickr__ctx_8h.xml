<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="wickr__ctx_8h" kind="file" language="C++">
    <compoundname>wickr_ctx.h</compoundname>
    <includes refid="eckey_8h" local="yes">eckey.h</includes>
    <includes refid="devinfo_8h" local="yes">devinfo.h</includes>
    <includes refid="root__keys_8h" local="yes">root_keys.h</includes>
    <includes refid="ephemeral__keypair_8h" local="yes">ephemeral_keypair.h</includes>
    <includes refid="storage_8h" local="yes">storage.h</includes>
    <includes refid="identity_8h" local="yes">identity.h</includes>
    <includes refid="protocol_8h" local="yes">protocol.h</includes>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <incdepgraph>
      <node id="520">
        <label>stdbool.h</label>
      </node>
      <node id="527">
        <label>kdf.h</label>
        <link refid="kdf_8h_source"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
      </node>
      <node id="535">
        <label>identity.h</label>
        <link refid="identity_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>stdint.h</label>
      </node>
      <node id="518">
        <label>stdlib.h</label>
      </node>
      <node id="533">
        <label>storage.h</label>
        <link refid="storage_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="516">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h"/>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
      </node>
      <node id="530">
        <label>ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
      </node>
      <node id="537">
        <label>node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>devinfo.h</label>
        <link refid="devinfo_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="534">
        <label>ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
      </node>
      <node id="522">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
      </node>
      <node id="523">
        <label>limits.h</label>
      </node>
      <node id="532">
        <label>root_keys.h</label>
        <link refid="root__keys_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="528">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="536">
        <label>protocol.h</label>
        <link refid="protocol_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
      </node>
      <node id="526">
        <label>cipher.h</label>
        <link refid="cipher_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
      </node>
      <node id="517">
        <label>eckey.h</label>
        <link refid="eckey_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="529">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>stdio.h</label>
      </node>
      <node id="525">
        <label>crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="538">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h"/>
        <childnode refid="539" relation="include">
        </childnode>
      </node>
      <node id="539">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__ctx" prot="public">wickr_ctx</innerclass>
    <innerclass refid="structwickr__ctx__gen__result" prot="public">wickr_ctx_gen_result</innerclass>
    <innerclass refid="structwickr__ctx__packet" prot="public">wickr_ctx_packet</innerclass>
    <innerclass refid="structwickr__ctx__encode" prot="public">wickr_ctx_encode</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wickr__ctx_8h_1af2fbefdfc52c772ca4ff223c1c1edd09" prot="public" static="no">
        <name>DEFAULT_PKT_ENC_VERSION</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="83" column="9" bodyfile="src/crypto/wickr_ctx.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wickr__ctx_8h_1a50fc62e34a9ec15c5ae6e8877c99def9" prot="public" static="no">
        <type>struct <ref refid="structwickr__ctx" kindref="compound">wickr_ctx</ref></type>
        <definition>typedef struct wickr_ctx wickr_ctx_t</definition>
        <argsstring></argsstring>
        <name>wickr_ctx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="79" column="1" bodyfile="src/crypto/wickr_ctx.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wickr__ctx_8h_1ad1092920168eae07d7897a88b6584d6a" prot="public" static="no">
        <type>struct <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref></type>
        <definition>typedef struct wickr_ctx_gen_result wickr_ctx_gen_result_t</definition>
        <argsstring></argsstring>
        <name>wickr_ctx_gen_result_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="79" column="1" bodyfile="src/crypto/wickr_ctx.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wickr__ctx_8h_1a6b4ff596a82bea474d1f3ec0d21c0ed3" prot="public" static="no">
        <type>struct <ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet</ref></type>
        <definition>typedef struct wickr_ctx_packet wickr_ctx_packet_t</definition>
        <argsstring></argsstring>
        <name>wickr_ctx_packet_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="388" column="1" bodyfile="src/crypto/wickr_ctx.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wickr__ctx_8h_1ac74362eddf6ca26da2f3cbae3c40fb95" prot="public" static="no">
        <type>struct <ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode</ref></type>
        <definition>typedef struct wickr_ctx_encode wickr_ctx_encode_t</definition>
        <argsstring></argsstring>
        <name>wickr_ctx_encode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="431" column="1" bodyfile="src/crypto/wickr_ctx.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__ctx_1gaa8904ab3687a22f8d291f5976d05a0e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
        <definition>wickr_ctx_gen_result_t* wickr_ctx_gen_new</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_dev_info_t *dev_info, wickr_buffer_t *identifier)</argsstring>
        <name>wickr_ctx_gen_new</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a new root and random node identity + context with random keys</para><para>NOTE: The resulting <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref> does not gain ownership over the parameters to this function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the crypto engine to use for all context operations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the device info for which to bind this context to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a system unique identifier that will represent the root identity that is being generated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a generation result containing a root identity represented by &apos;identifier&apos; and a node identity signed by &apos;root&apos; with a random set of keys </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga458f74fb060fb98da491d733e51fc3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
        <definition>wickr_ctx_gen_result_t* wickr_ctx_gen_new_with_sig_key</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_dev_info_t *dev_info, wickr_ec_key_t *sig_key, wickr_buffer_t *identifier)</argsstring>
        <name>wickr_ctx_gen_new_with_sig_key</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
          <declname>sig_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a new root and random node identity + context with random keys except for a provided root signing key</para><para>NOTE: The resulting <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref> does not gain ownership over the parameters to this function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the crypto engine to use for all context operations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the device info for which to bind this context to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sig_key</parametername>
</parameternamelist>
<parameterdescription>
<para>a signature key to associate with the generated root identity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>a system unique identifier that will represent the root identity that is being generated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a generation result containing a root identity represented by &apos;identifier&apos; and a node identity signed by &apos;root&apos; with &apos;sig_key&apos; as the root signing key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga286a513a606b6643f796539413357c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
        <definition>wickr_ctx_gen_result_t* wickr_ctx_gen_with_root_keys</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_dev_info_t *dev_info, wickr_root_keys_t *root_keys, wickr_buffer_t *identifier)</argsstring>
        <name>wickr_ctx_gen_with_root_keys</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type><ref refid="structwickr__root__keys" kindref="compound">wickr_root_keys_t</ref> *</type>
          <declname>root_keys</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a new context using an existing root keys set</para><para>NOTE: The resulting <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref> does not gain ownership over the parameters to this function</para><para>This function is used to provision a new node identity onto the system given an existing root identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the crypto engine to use for all context operations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the device info for which to bind this context to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the root keys to use for the generation, the generated node will be signed by the root key&apos;s signing key, and the storage keys will be derived from the root remote / local cipher keys </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>the system unique identifier that was previously associated with root_keys </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a generation result containing an existing root identity represented by &apos;identifier&apos; and a node identity signed by the existing root </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gaab0b2731d76d6ea91afd1b147c53a29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
        <definition>wickr_ctx_gen_result_t* wickr_ctx_gen_with_passphrase</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_dev_info_t *dev_info, wickr_buffer_t *exported_recovery_key, wickr_buffer_t *passphrase, wickr_buffer_t *recovery_data, wickr_buffer_t *identifier)</argsstring>
        <name>wickr_ctx_gen_with_passphrase</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>exported_recovery_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>recovery_data</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a new context using an existing root identity&apos;s exported recovery key and a passphrase</para><para>NOTE: The resulting <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref> does not gain ownership over the parameters to this function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the crypto engine to use for all context operations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the device info for which to bind this context to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exported_recovery_key</parametername>
</parameternamelist>
<parameterdescription>
<para>a previously exported random recovery key that was protected with a KDF using &apos;passphrase&apos; as the key. See &apos;wickr_ctx_gen_export_recovery_key_passphrase&apos; for more information </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>the passphrase to decode exported_recovery_key with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recovery_data</parametername>
</parameternamelist>
<parameterdescription>
<para>an export of &apos;root_keys&apos; from a previous context encrypted with recovery_key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>identifier the system unique identifier that was previously associated with the root keys held in &apos;recovery&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a generation result containing an existing root identity represented by &apos;identifier&apos; and a node identity signed by the existing root. NULL if decoding &apos;exported_recovery_key&apos; or &apos;recovery&apos; fails due to an invalid passphrase </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga2e9c63af0e76f1977844ea2dc895e90a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
        <definition>wickr_ctx_gen_result_t* wickr_ctx_gen_with_recovery</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_dev_info_t *dev_info, wickr_buffer_t *recovery_data, wickr_cipher_key_t *recovery_key, wickr_buffer_t *identifier)</argsstring>
        <name>wickr_ctx_gen_with_recovery</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>recovery_data</declname>
        </param>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>recovery_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a new context using an existing exported root keys and a provided recovery key</para><para>NOTE: The resulting <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref> does not gain ownership over the parameters to this function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the crypto engine to use for all context operations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the device info for which to bind this context to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recovery_data</parametername>
</parameternamelist>
<parameterdescription>
<para>an recovery containing exported root_keys from a previous context using &apos;recovery_key&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recovery_key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to decrypt &apos;recovery&apos; with to attempt recovery of root_keys to use for context generation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>identifier the system unique identifier that was previously associated with the root keys held in &apos;recovery&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a generation result containing an existing root identity represented by &apos;identifier&apos; and a node identity signed by the existing root. NULL if decoding &apos;recovery&apos; fails due to an incorrect key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga2dadd40adc0217dd337ee6cf745cbc12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_ctx_gen_export_recovery_key_passphrase</definition>
        <argsstring>(const wickr_ctx_gen_result_t *result, const wickr_buffer_t *passphrase)</argsstring>
        <name>wickr_ctx_gen_export_recovery_key_passphrase</name>
        <param>
          <type>const <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exports the recovery key using a KDF + CIPHER function</para><para>For more information on the KDF + CIPHER functionality, review documentation for &apos;wickr_crypto_engine_kdf_cipher&apos;</para><para>Defaults are currently using KDF_SCRYPT_2_17 for a KDF and CIPHER_AES256_GCM for a cipher</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>a context generation result to export the recovery key from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>the passphrase to use as input to the KDF function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer that was created by first taking KDF(randomSalt || passphrase) and then using that output as a key that encrypted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wickr__ctx_8h_1a6e4606fe1b387d9ac0ba43b8534f33b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
        <definition>wickr_cipher_key_t* wickr_ctx_gen_import_recovery_key_passphrase</definition>
        <argsstring>(const wickr_crypto_engine_t engine, const wickr_buffer_t *exported_recovery_key, const wickr_buffer_t *passphrase)</argsstring>
        <name>wickr_ctx_gen_import_recovery_key_passphrase</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>exported_recovery_key</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine that supports the KDF and cipher used to originally export an recovery key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exported_recovery_key</parametername>
</parameternamelist>
<parameterdescription>
<para>an exported recovery key from &apos;wickr_ctx_gen_export_recovery_key_passphrase&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>the passphrase used during the original export </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a decoded recovery key or NULL if the passphrase is incorrect </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gaa32727731391f1e3fbde26094924b533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_ctx_gen_result_make_recovery</definition>
        <argsstring>(const wickr_ctx_gen_result_t *result)</argsstring>
        <name>wickr_ctx_gen_result_make_recovery</name>
        <param>
          <type>const <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializes root keys and ciphers them with the recovery key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the context generation result to make an recovery from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer with a serialized cipher_result generated by encrypting &apos;root_keys&apos; with the &apos;recovery_key&apos; held in &apos;result&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga0bde95494141673604b9e4e1f7954e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__root__keys" kindref="compound">wickr_root_keys_t</ref> *</type>
        <definition>wickr_root_keys_t* wickr_ctx_gen_import_recovery</definition>
        <argsstring>(const wickr_crypto_engine_t engine, const wickr_buffer_t *recovery_data, const wickr_cipher_key_t *recovery_key)</argsstring>
        <name>wickr_ctx_gen_import_recovery</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>recovery_data</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>recovery_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine that was used to call &apos;wickr_ctx_gen_result_make_recovery&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recovery_data</parametername>
</parameternamelist>
<parameterdescription>
<para>an encrypted recovery as created by &apos;wickr_ctx_gen_result_make_recovery&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recovery_key</parametername>
</parameternamelist>
<parameterdescription>
<para>the recovery key from the &apos;<ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref>&apos; that called &apos;wickr_ctx_gen_result_make_recovery&apos; to make &apos;recovery&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root keys created from decoding &apos;recovery&apos; with &apos;recovery_key&apos; or NULL if the decryption operation failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gae095a8cb40d209090212136f8580dc77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
        <definition>wickr_ctx_gen_result_t* wickr_ctx_gen_result_copy</definition>
        <argsstring>(const wickr_ctx_gen_result_t *source)</argsstring>
        <name>wickr_ctx_gen_result_copy</name>
        <param>
          <type>const <ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a context generation result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the context generation result to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated context generation result holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga865854408d22e4697eebe5bc129cc6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ctx_gen_result_destroy</definition>
        <argsstring>(wickr_ctx_gen_result_t **result)</argsstring>
        <name>wickr_ctx_gen_result_destroy</name>
        <param>
          <type><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref> **</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a context generation result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the context generation result to destroy. All properties of &apos;*result&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga085975d71519bf5729a7cf264a5f7876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
        <definition>wickr_ctx_t* wickr_ctx_create</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_dev_info_t *dev_info, wickr_identity_chain_t *id_chain, wickr_storage_keys_t *storage_keys)</argsstring>
        <name>wickr_ctx_create</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>id_chain</declname>
        </param>
        <param>
          <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
          <declname>storage_keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a context from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine to support context operations </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_info</parametername>
</parameternamelist>
<parameterdescription>
<para>the device information the context should be bound to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id_chain</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity chain that belongs to this context and will be used for encoding / decoding messages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the storage keys used for local and remote ciphers of this context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated context owning the passed in parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gaaa74a32619fb3b382fbeeeddc425a910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
        <definition>wickr_ctx_t* wickr_ctx_copy</definition>
        <argsstring>(const wickr_ctx_t *ctx)</argsstring>
        <name>wickr_ctx_copy</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a context</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated context holding a deep copy of the properties of &apos;ctx&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gaadfdef183c86992efc33b0d730c90327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ctx_destroy</definition>
        <argsstring>(wickr_ctx_t **ctx)</argsstring>
        <name>wickr_ctx_destroy</name>
        <param>
          <type><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> **</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a context</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the context to destroy. All properties of &apos;*ctx&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga67e64bed3fc0a8ee550c0fc24d44c787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_ctx_export_storage_keys</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_buffer_t *passphrase)</argsstring>
        <name>wickr_ctx_export_storage_keys</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exports storage keys for a context using a KDF + CIPHER function</para><para>For more information on the KDF + CIPHER functionality, review documentation for &apos;wickr_crypto_engine_kdf_cipher&apos;</para><para>Defaults are currently using KDF_SCRYPT_2_17 for a KDF and CIPHER_AES256_GCM for a cipher</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to export storage keys from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>the passphrase to use as input to a KDF that will generated a key to protect storage keys </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer containing exported storage keys </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gae344e5202193c4b92ee2686529285fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref> *</type>
        <definition>wickr_storage_keys_t* wickr_ctx_import_storage_keys</definition>
        <argsstring>(const wickr_crypto_engine_t engine, const wickr_buffer_t *exported, const wickr_buffer_t *passphrase)</argsstring>
        <name>wickr_ctx_import_storage_keys</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>exported</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Import storage keys exported with &apos;wickr_ctx_export_storage_keys&apos;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine supporting KDF based encryption </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exported</parametername>
</parameternamelist>
<parameterdescription>
<para>keys exported with &apos;wickr_ctx_export_storage_keys&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>the passphrase used to export storage keys </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>decoded storage keys or NULL if the passphrase is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gaeff6704dded2d44f689eca5ad25843f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
        <definition>wickr_cipher_result_t* wickr_ctx_cipher_local</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_buffer_t *plaintext)</argsstring>
        <name>wickr_ctx_cipher_local</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>plaintext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encrypts data using the local storage key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use for encryption </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>the bytes to encrypt for local storage </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&apos;plaintext&apos; encrypted with the context&apos;s local storage key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wickr__ctx_8h_1ada7ea09de01765d24713432bf15466cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_ctx_decipher_local</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_cipher_result_t *cipher_text)</argsstring>
        <name>wickr_ctx_decipher_local</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
          <declname>cipher_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrypts data using the local storage key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use for decryption </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cipher_text</parametername>
</parameternamelist>
<parameterdescription>
<para>a cipher result from &apos;wickr_ctx_cipher_local&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&apos;cipher_text&apos; decoded with local storage key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga0b985fb2cd05fb482b5ed175dfd650a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
        <definition>wickr_cipher_result_t* wickr_ctx_cipher_remote</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_buffer_t *plaintext)</argsstring>
        <name>wickr_ctx_cipher_remote</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>plaintext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encrypts data using the remote storage key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use for encryption </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>plaintext the bytes to encrypt for remote storage </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&apos;plaintext&apos; encrypted with the context&apos;s remote storage key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gacc1038d3690ba4860b74f13239c65600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_ctx_decipher_remote</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_cipher_result_t *cipher_text)</argsstring>
        <name>wickr_ctx_decipher_remote</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
          <declname>cipher_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrypts data using the local storage key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use for decryption </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cipher_text</parametername>
</parameternamelist>
<parameterdescription>
<para>a cipher result from &apos;wickr_ctx_cipher_remote&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&apos;cipher_text&apos; decoded with remote storage key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga45b2531085c430942122dcbf45736e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref> *</type>
        <definition>wickr_ephemeral_keypair_t* wickr_ctx_ephemeral_keypair_gen</definition>
        <argsstring>(const wickr_ctx_t *ctx, uint64_t key_id)</argsstring>
        <name>wickr_ctx_ephemeral_keypair_gen</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>key_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate ephemeral message keypairs</para><para>NOTE: the result of this function should be kept in a local cache to allow for decoding a message that was created with it&apos;s public components. The public buffer of the contained EC key, along with the key_id, and the key signature should be published to a pool for consumption and use by a sender looking to addresss a message to this context</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use for ephemeral key pair generation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier to assign to the generated keypair </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an ephemeral key pair containing the private and public components, signed by the ctx node signing identity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga8ac1e1c9a0b9802d7f259278a09df56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref> *</type>
        <definition>wickr_ctx_packet_t* wickr_ctx_packet_create</definition>
        <argsstring>(wickr_packet_t *packet, wickr_identity_chain_t *sender, wickr_parse_result_t *parse_result)</argsstring>
        <name>wickr_ctx_packet_create</name>
        <param>
          <type><ref refid="structwickr__packet" kindref="compound">wickr_packet_t</ref> *</type>
          <declname>packet</declname>
        </param>
        <param>
          <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>sender</declname>
        </param>
        <param>
          <type><ref refid="structwickr__parse__result" kindref="compound">wickr_parse_result_t</ref> *</type>
          <declname>parse_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a context packet parse result from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>see property description from &apos;<ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet</ref>&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sender</parametername>
</parameternamelist>
<parameterdescription>
<para>see property description from &apos;<ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet</ref>&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parse_result</parametername>
</parameternamelist>
<parameterdescription>
<para>see property description from &apos;<ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet</ref>&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated context packet parse result owning the parameters passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1gad7063bcfca4878d290e598ed6bc22e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ctx_packet_destroy</definition>
        <argsstring>(wickr_ctx_packet_t **packet)</argsstring>
        <name>wickr_ctx_packet_destroy</name>
        <param>
          <type><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref> **</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a packet parse result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a context packet parse result to destroy. Will destroy the sub properties of &apos;*packet&apos; as well </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga810ee459cb0ab1037b5fd1f983d0ded3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref> *</type>
        <definition>wickr_ctx_encode_t* wickr_ctx_encode_create</definition>
        <argsstring>(wickr_cipher_key_t *packet_key, wickr_buffer_t *encoded_packet)</argsstring>
        <name>wickr_ctx_encode_create</name>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>packet_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>encoded_packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an encode result from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet_key</parametername>
</parameternamelist>
<parameterdescription>
<para>see property description from &apos;<ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode</ref>&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoded_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>see property description from &apos;<ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode</ref>&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated encode packet result owning the parameters passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga9ed3f7c0f4d672a2ac562b279e2da4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ctx_encode_destroy</definition>
        <argsstring>(wickr_ctx_encode_t **encode)</argsstring>
        <name>wickr_ctx_encode_destroy</name>
        <param>
          <type><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref> **</type>
          <declname>encode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an encode packet result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encode</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an encode packet result to destroy. Will destroy the sub properties of &apos;*encode&apos; as well </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga3766720fd6654fad791a26cd2c1161b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref> *</type>
        <definition>wickr_ctx_encode_t* wickr_ctx_encode_packet</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_payload_t *payload, const wickr_node_array_t *nodes)</argsstring>
        <name>wickr_ctx_encode_packet</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__payload" kindref="compound">wickr_payload_t</ref> *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>const wickr_node_array_t *</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode a Wickr packet to a set of nodes</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use to encode &apos;payload&apos; to &apos;nodes&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>the metadata and body information to send to &apos;nodes&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>the recipient nodes for this packet </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an encode result containing an encrypted Wickr packet that transfers &apos;payload&apos; to &apos;nodes&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ctx_1ga5032fb65627a509fd9486ea9696e643d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref> *</type>
        <definition>wickr_ctx_packet_t* wickr_ctx_parse_packet</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_buffer_t *packet_buffer, const wickr_identity_chain_t *sender)</argsstring>
        <name>wickr_ctx_parse_packet</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>packet_buffer</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>sender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a Wickr packet into components, fail if the current node&apos;s key exchange is not found</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the context to use for parsing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer representing the serialized packet that was delivered to &apos;ctx&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sender</parametername>
</parameternamelist>
<parameterdescription>
<para>the sender of the &apos;packet_buffer&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a parse result holding the parsed information from &apos;packet_buffer&apos; as well as a discovered key exchange from the current ctx node_id. If the packet was not addressed to this context, an error is generated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wickr__ctx_8h_1a3208266eac83b4ea700a01f2b549578e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref> *</type>
        <definition>wickr_ctx_packet_t* wickr_ctx_parse_packet_no_decode</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_buffer_t *packet_buffer, const wickr_identity_chain_t *sender)</argsstring>
        <name>wickr_ctx_parse_packet_no_decode</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>packet_buffer</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>sender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a packet into components, do not fail if the current node&apos;s key exchange is not found</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>ctx the context to use for parsing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer representing the serialized packet that was delivered to &apos;ctx&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sender</parametername>
</parameternamelist>
<parameterdescription>
<para>the sender of the &apos;packet_buffer&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a parse result holding the parsed information from &apos;packet_buffer&apos; with a NULL key exchange </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wickr__ctx_8h_1a6e848d26d412f2c6f93bf1cbdf0facc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__decode__result" kindref="compound">wickr_decode_result_t</ref> *</type>
        <definition>wickr_decode_result_t* wickr_ctx_decode_packet</definition>
        <argsstring>(const wickr_ctx_t *ctx, const wickr_ctx_packet_t *packet, wickr_ec_key_t *keypair)</argsstring>
        <name>wickr_ctx_decode_packet</name>
        <param>
          <type>const <ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref> *</type>
          <declname>packet</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
          <declname>keypair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decode a parsed packet using the provided keypair</para><para>NOTE: this will fail if the packet was parsed using wickr_ctx_parse_packet_no_decode</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>ctx the context to use for decoding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>a previously parsed packet using &apos;wickr_ctx_parse_packet&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keypair</parametername>
</parameternamelist>
<parameterdescription>
<para>a key pair containing the private key associated with the identifier contained within the key exchange within the packet parse result </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a decode result containing an error status as well as the decoded packet payload, and the payload_key that was derived via the key exchange operations if the key pair presented is correct </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/wickr_ctx.h" line="521" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>wickr_ctx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wickr_ctx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;eckey.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;devinfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;root_keys.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ephemeral_keypair.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;storage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;identity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/****************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>****************************************</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>**<sp/><sp/>__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___<sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>**<sp/><sp/>\<sp/>\<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(_)<sp/><sp/><sp/><sp/>|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>**<sp/><sp/><sp/>\<sp/>\<sp/><sp/>/\<sp/><sp/>/<sp/>/<sp/>_<sp/><sp/>___|<sp/>|<sp/>___<sp/>__<sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>\<sp/>\/<sp/><sp/>\/<sp/>/<sp/>|<sp/>|/<sp/>__|<sp/>|/<sp/>/<sp/>&apos;__|<sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>\<sp/><sp/>/\<sp/><sp/>/<sp/><sp/>|<sp/>|<sp/>(__|<sp/><sp/><sp/>&lt;|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>\/<sp/><sp/>\/<sp/><sp/><sp/>|_|\___|_|\_\_|<sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>****************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>***************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structwickr__ctx" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx" kindref="compound">wickr_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="70" refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>;</highlight></codeline>
<codeline lineno="71" refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>;</highlight></codeline>
<codeline lineno="72" refid="structwickr__ctx_1a044a292ab5cbba50fd3ec2f5bf7a00ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*<ref refid="structwickr__ctx_1a044a292ab5cbba50fd3ec2f5bf7a00ef" kindref="member">id_chain</ref>;</highlight></codeline>
<codeline lineno="73" refid="structwickr__ctx_1ab6d3ad69a6a16c0f582186b9d8461b66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*<ref refid="structwickr__ctx_1ab6d3ad69a6a16c0f582186b9d8461b66" kindref="member">storage_keys</ref>;</highlight></codeline>
<codeline lineno="74" refid="structwickr__ctx_1a86da8359c914b1fec0d60e1c64fcf048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__ctx_1a86da8359c914b1fec0d60e1c64fcf048" kindref="member">packet_header_key</ref>;</highlight></codeline>
<codeline lineno="75" refid="structwickr__ctx_1ad43117fbe3f70681f0ab982b06c6cd75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwickr__ctx_1ad43117fbe3f70681f0ab982b06c6cd75" kindref="member">pkt_enc_version</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx" kindref="compound">wickr_ctx</ref><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>default<sp/>version<sp/>of<sp/>packets<sp/>to<sp/>use<sp/>for<sp/>encoding.<sp/>Currently<sp/>this<sp/>is<sp/>set<sp/>to<sp/>v3<sp/>instead<sp/>of<sp/>the<sp/>max<sp/>supported<sp/>version<sp/>of<sp/>v4.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>Older<sp/>clients<sp/>will<sp/>be<sp/>deprecated<sp/>some<sp/>time<sp/>after<sp/>the<sp/>v4<sp/>protocol<sp/>update,<sp/>which<sp/>will<sp/>allow<sp/>for<sp/>the<sp/>default<sp/>version<sp/>to<sp/>increment<sp/>to<sp/>v4</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_PKT_ENC_VERSION<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="structwickr__ctx__gen__result" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref><sp/>{</highlight></codeline>
<codeline lineno="98" refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="99" refid="structwickr__ctx__gen__result_1a32feaf76def6c13abe0240c6ae669999" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1a32feaf76def6c13abe0240c6ae669999" kindref="member">recovery_key</ref>;</highlight></codeline>
<codeline lineno="100" refid="structwickr__ctx__gen__result_1a42600241a65a968de4f84120d9031320" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__root__keys" kindref="compound">wickr_root_keys_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1a42600241a65a968de4f84120d9031320" kindref="member">root_keys</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result</ref><sp/><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generation<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1gaa8904ab3687a22f8d291f5976d05a0e5" kindref="member">wickr_ctx_gen_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*identifier);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga458f74fb060fb98da491d733e51fc3ef" kindref="member">wickr_ctx_gen_new_with_sig_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref><sp/>*sig_key,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*identifier);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga286a513a606b6643f796539413357c34" kindref="member">wickr_ctx_gen_with_root_keys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__root__keys" kindref="compound">wickr_root_keys_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1a42600241a65a968de4f84120d9031320" kindref="member">root_keys</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*identifier);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1gaab0b2731d76d6ea91afd1b147c53a29a" kindref="member">wickr_ctx_gen_with_passphrase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*exported_recovery_key,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*recovery_data,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*identifier);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga2e9c63af0e76f1977844ea2dc895e90a" kindref="member">wickr_ctx_gen_with_recovery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*recovery_data,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1a32feaf76def6c13abe0240c6ae669999" kindref="member">recovery_key</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*identifier);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga2dadd40adc0217dd337ee6cf745cbc12" kindref="member">wickr_ctx_gen_export_recovery_key_passphrase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*wickr_ctx_gen_import_recovery_key_passphrase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*exported_recovery_key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__ctx_1gaa32727731391f1e3fbde26094924b533" kindref="member">wickr_ctx_gen_result_make_recovery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*result);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="structwickr__root__keys" kindref="compound">wickr_root_keys_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga0bde95494141673604b9e4e1f7954e2c" kindref="member">wickr_ctx_gen_import_recovery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*recovery_data,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1a32feaf76def6c13abe0240c6ae669999" kindref="member">recovery_key</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1gae095a8cb40d209090212136f8580dc77" kindref="member">wickr_ctx_gen_result_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ctx_1ga865854408d22e4697eebe5bc129cc6b1" kindref="member">wickr_ctx_gen_result_destroy</ref>(<ref refid="structwickr__ctx__gen__result" kindref="compound">wickr_ctx_gen_result_t</ref><sp/>**result);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Context<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga085975d71519bf5729a7cf264a5f7876" kindref="member">wickr_ctx_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__dev__info" kindref="compound">wickr_dev_info_t</ref><sp/>*<ref refid="structwickr__ctx_1a043ea3b027c4d27909f77bb195550b11" kindref="member">dev_info</ref>,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*<ref refid="structwickr__ctx_1a044a292ab5cbba50fd3ec2f5bf7a00ef" kindref="member">id_chain</ref>,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*<ref refid="structwickr__ctx_1ab6d3ad69a6a16c0f582186b9d8461b66" kindref="member">storage_keys</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="group__wickr__ctx_1gaaa74a32619fb3b382fbeeeddc425a910" kindref="member">wickr_ctx_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ctx_1gaadfdef183c86992efc33b0d730c90327" kindref="member">wickr_ctx_destroy</ref>(<ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>**<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga67e64bed3fc0a8ee550c0fc24d44c787" kindref="member">wickr_ctx_export_storage_keys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="structwickr__storage__keys" kindref="compound">wickr_storage_keys_t</ref><sp/>*<ref refid="group__wickr__ctx_1gae344e5202193c4b92ee2686529285fe5" kindref="member">wickr_ctx_import_storage_keys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__ctx_1a244c238ad74f2dbcddc280822d1fb93f" kindref="member">engine</ref>,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*exported,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1gaeff6704dded2d44f689eca5ad25843f8" kindref="member">wickr_ctx_cipher_local</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*plaintext);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*wickr_ctx_decipher_local(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*cipher_text);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga0b985fb2cd05fb482b5ed175dfd650a0" kindref="member">wickr_ctx_cipher_remote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*plaintext);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__ctx_1gacc1038d3690ba4860b74f13239c65600" kindref="member">wickr_ctx_decipher_remote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*cipher_text);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="structwickr__ephemeral__keypair" kindref="compound">wickr_ephemeral_keypair_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga45b2531085c430942122dcbf45736e10" kindref="member">wickr_ctx_ephemeral_keypair_gen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*<ref refid="structwickr__ctx__gen__result_1acf7a49dc829a76f122e2eb88e1ddf5aa" kindref="member">ctx</ref>,<sp/>uint64_t<sp/>key_id);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="structwickr__ctx__packet" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet</ref><sp/>{</highlight></codeline>
<codeline lineno="403" refid="structwickr__ctx__packet_1a0cdbc84b6fcc6115b8ddf21b235cc645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__packet" kindref="compound">wickr_packet_t</ref><sp/>*<ref refid="structwickr__ctx__packet_1a0cdbc84b6fcc6115b8ddf21b235cc645" kindref="member">packet</ref>;</highlight></codeline>
<codeline lineno="404" refid="structwickr__ctx__packet_1ac57d2b0f48fc3dad5b72d408e30b7b8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*<ref refid="structwickr__ctx__packet_1ac57d2b0f48fc3dad5b72d408e30b7b8b" kindref="member">sender</ref>;</highlight></codeline>
<codeline lineno="405" refid="structwickr__ctx__packet_1a7bc4643a99b787536ee8b7505412ecce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__parse__result" kindref="compound">wickr_parse_result_t</ref><sp/>*<ref refid="structwickr__ctx__packet_1a7bc4643a99b787536ee8b7505412ecce" kindref="member">parse_result</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet</ref><sp/><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga8ac1e1c9a0b9802d7f259278a09df56c" kindref="member">wickr_ctx_packet_create</ref>(<ref refid="structwickr__packet" kindref="compound">wickr_packet_t</ref><sp/>*<ref refid="structwickr__ctx__packet_1a0cdbc84b6fcc6115b8ddf21b235cc645" kindref="member">packet</ref>,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*<ref refid="structwickr__ctx__packet_1ac57d2b0f48fc3dad5b72d408e30b7b8b" kindref="member">sender</ref>,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__parse__result" kindref="compound">wickr_parse_result_t</ref><sp/>*<ref refid="structwickr__ctx__packet_1a7bc4643a99b787536ee8b7505412ecce" kindref="member">parse_result</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ctx_1gad7063bcfca4878d290e598ed6bc22e3c" kindref="member">wickr_ctx_packet_destroy</ref>(<ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref><sp/>**<ref refid="structwickr__ctx__packet_1a0cdbc84b6fcc6115b8ddf21b235cc645" kindref="member">packet</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="structwickr__ctx__encode" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode</ref><sp/>{</highlight></codeline>
<codeline lineno="443" refid="structwickr__ctx__encode_1af96f392d9f5081e3c229d0342f71d629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__ctx__encode_1af96f392d9f5081e3c229d0342f71d629" kindref="member">packet_key</ref>;</highlight></codeline>
<codeline lineno="444" refid="structwickr__ctx__encode_1ac83f0d28849ec047ccf8fb4b14319ad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__ctx__encode_1ac83f0d28849ec047ccf8fb4b14319ad9" kindref="member">encoded_packet</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode</ref><sp/><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga810ee459cb0ab1037b5fd1f983d0ded3" kindref="member">wickr_ctx_encode_create</ref>(<ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__ctx__encode_1af96f392d9f5081e3c229d0342f71d629" kindref="member">packet_key</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__ctx__encode_1ac83f0d28849ec047ccf8fb4b14319ad9" kindref="member">encoded_packet</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__ctx_1ga9ed3f7c0f4d672a2ac562b279e2da4e1" kindref="member">wickr_ctx_encode_destroy</ref>(<ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref><sp/>**encode);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Message<sp/>Encode<sp/>/<sp/>Decode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><ref refid="structwickr__ctx__encode" kindref="compound">wickr_ctx_encode_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga3766720fd6654fad791a26cd2c1161b7" kindref="member">wickr_ctx_encode_packet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__payload" kindref="compound">wickr_payload_t</ref><sp/>*payload,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wickr_node_array_t<sp/>*nodes);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref><sp/>*<ref refid="group__wickr__ctx_1ga5032fb65627a509fd9486ea9696e643d" kindref="member">wickr_ctx_parse_packet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*packet_buffer,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*sender);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref><sp/>*wickr_ctx_parse_packet_no_decode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*packet_buffer,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*sender);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><ref refid="structwickr__decode__result" kindref="compound">wickr_decode_result_t</ref><sp/>*wickr_ctx_decode_packet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx" kindref="compound">wickr_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__ctx__packet" kindref="compound">wickr_ctx_packet_t</ref><sp/>*packet,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref><sp/>*keypair);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>wickr_ctx_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/wickr_ctx.h"/>
  </compounddef>
</doxygen>
