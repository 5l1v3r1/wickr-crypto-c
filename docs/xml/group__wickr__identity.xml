<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__wickr__identity" kind="group">
    <compoundname>wickr_identity</compoundname>
    <title>wickr_identity</title>
    <innerclass refid="structwickr__identity" prot="public">wickr_identity</innerclass>
    <innerclass refid="structwickr__identity__chain" prot="public">wickr_identity_chain</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__wickr__identity_1ga78aefa3835eb13ca75c0129583b5ebfa" prot="public" static="no">
        <name>wickr_identity_chain_status</name>
        <enumvalue id="group__wickr__identity_1gga78aefa3835eb13ca75c0129583b5ebfaa5b040fe6ae99a667fbed5e4593da06e1" prot="public">
          <name>IDENTITY_CHAIN_STATUS_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wickr__identity_1gga78aefa3835eb13ca75c0129583b5ebfaa3511d78b8997d40c179376c2303dd133" prot="public">
          <name>IDENTITY_CHAIN_STATUS_VALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wickr__identity_1gga78aefa3835eb13ca75c0129583b5ebfaa92b4d59d2888af7720a65d751e74246e" prot="public">
          <name>IDENTITY_CHAIN_STATUS_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Identity chain status</para><para>UNKNOWN - Signature validation has never been attempted on the chain VALID - Signature validation has been attempted and has passed on the chain INVALID - Signature validation has been attempted and has failed on chain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="60" column="1" bodyfile="src/crypto/identity.h" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__identity_1ga75bfef275a250a32784231e8c042913b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
        <definition>wickr_identity_t* wickr_identity_create</definition>
        <argsstring>(wickr_identity_type type, wickr_buffer_t *identifier, wickr_ec_key_t *sig_key, wickr_ecdsa_result_t *signature)</argsstring>
        <name>wickr_identity_create</name>
        <param>
          <type>wickr_identity_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
          <declname>sig_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref> *</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an identity from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sig_key</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity that takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga32097764e57e70d85a2e1277146495c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref> *</type>
        <definition>wickr_ecdsa_result_t* wickr_identity_sign</definition>
        <argsstring>(const wickr_identity_t *identity, const wickr_crypto_engine_t *engine, const wickr_buffer_t *data)</argsstring>
        <name>wickr_identity_sign</name>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>identity</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sign provided data using an identity signing key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identity</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity to use for signing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine supporting signatures using the identity&apos;s signing key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to sign </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an ECDSA result containing a signature of &apos;data&apos; using the &apos;sig_key&apos; property of &apos;identity&apos;. NULL if the provided identity does not contain a private signing key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1gae820c1efc090fef6a8d27dd700316023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
        <definition>wickr_identity_t* wickr_node_identity_gen</definition>
        <argsstring>(const wickr_crypto_engine_t *engine, const wickr_identity_t *root_identity)</argsstring>
        <name>wickr_node_identity_gen</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>root_identity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a new random node identity, given a root identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine supporting random Elliptical Curve Key generation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root_identity</parametername>
</parameternamelist>
<parameterdescription>
<para>a root identity that supports generating signatures with a private signing key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated node identity signing by root identity &apos;root_identity&apos;. The &apos;identifier&apos; property of the node is generated at random to be &apos;IDENTIFIER_LEN&apos; in length (currently 32 bytes). NULL if root_identity is not a root, or it does not contain a private signing key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga14d1fb3ddd1dbd7797eb9b628eef99fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
        <definition>wickr_identity_t* wickr_identity_copy</definition>
        <argsstring>(const wickr_identity_t *source)</argsstring>
        <name>wickr_identity_copy</name>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga9e4a0f3736d52836c9a9fc61794c8ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_identity_destroy</definition>
        <argsstring>(wickr_identity_t **identity)</argsstring>
        <name>wickr_identity_destroy</name>
        <param>
          <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> **</type>
          <declname>identity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identity</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the identity to destroy. All properties of &apos;*identity&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga79551385194ba6b044b676ce5c7400e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
        <definition>wickr_identity_chain_t* wickr_identity_chain_create</definition>
        <argsstring>(wickr_identity_t *root, wickr_identity_t *node)</argsstring>
        <name>wickr_identity_chain_create</name>
        <param>
          <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an identity chain from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity chain that takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1gac9d708d340abcd0b54d87434b71d2d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
        <definition>wickr_identity_chain_t* wickr_identity_chain_copy</definition>
        <argsstring>(const wickr_identity_chain_t *source)</argsstring>
        <name>wickr_identity_chain_copy</name>
        <param>
          <type>const <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an identity chain</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity chain to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity chain holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga12f5b33c4947b6a2ca3df3bdaacafa10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wickr_identity_chain_validate</definition>
        <argsstring>(const wickr_identity_chain_t *chain, const wickr_crypto_engine_t *engine)</argsstring>
        <name>wickr_identity_chain_validate</name>
        <param>
          <type>const <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify the validity of an identity chain</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>the chain to validate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine that supports verifying signatures </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the &apos;signature&apos; of the &apos;node&apos; property of &apos;chain&apos; can be properly verified with the public &apos;sig_key&apos; from the &apos;root&apos; property of &apos;chain&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1gadbddf6d49fddb2df103486970b3d564b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_identity_chain_destroy</definition>
        <argsstring>(wickr_identity_chain_t **chain)</argsstring>
        <name>wickr_identity_chain_destroy</name>
        <param>
          <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> **</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an identity chain</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the identity chain to destroy. All properties of &apos;*chain&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="220" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wickr__identity_1ga43bd60836203349a1c745d0d29bf7706" prot="public" static="no">
        <name>IDENTIFIER_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Identifiers should be 32 bytes on the Wickr system, this requirement could drop or change in the future </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="43" column="9" bodyfile="src/crypto/identity.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
