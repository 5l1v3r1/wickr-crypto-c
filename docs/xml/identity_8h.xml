<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="identity_8h" kind="file" language="C++">
    <compoundname>identity.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="buffer_8h" local="yes">buffer.h</includes>
    <includes refid="eckey_8h" local="yes">eckey.h</includes>
    <includes refid="ecdsa_8h" local="yes">ecdsa.h</includes>
    <includes refid="crypto__engine_8h" local="yes">crypto_engine.h</includes>
    <includes refid="root__keys_8h" local="yes">root_keys.h</includes>
    <includedby refid="ephemeral__keypair_8h" local="yes">src/crypto/ephemeral_keypair.h</includedby>
    <includedby refid="node_8h" local="yes">src/crypto/node.h</includedby>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <includedby refid="wickr__ctx_8h" local="yes">src/crypto/wickr_ctx.h</includedby>
    <incdepgraph>
      <node id="255">
        <label>stdbool.h</label>
      </node>
      <node id="264">
        <label>kdf.h</label>
        <link refid="kdf_8h_source"/>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>src/crypto/identity.h</label>
        <link refid="identity_8h"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
      </node>
      <node id="256">
        <label>stdint.h</label>
      </node>
      <node id="253">
        <label>stdlib.h</label>
      </node>
      <node id="268">
        <label>storage.h</label>
        <link refid="storage_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>devinfo.h</label>
        <link refid="devinfo_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>limits.h</label>
      </node>
      <node id="267">
        <label>root_keys.h</label>
        <link refid="root__keys_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>cipher.h</label>
        <link refid="cipher_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>eckey.h</label>
        <link refid="eckey_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="254">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>stdio.h</label>
      </node>
      <node id="262">
        <label>crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="270">
        <label>src/crypto/identity.h</label>
        <link refid="identity_8h"/>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="272">
        <label>src/crypto/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>src/crypto/ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h_source"/>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
      <node id="273">
        <label>src/crypto/protocol.h</label>
        <link refid="protocol_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__identity" prot="public">wickr_identity</innerclass>
    <innerclass refid="structwickr__identity__chain" prot="public">wickr_identity_chain</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wickr__identity_1ga43bd60836203349a1c745d0d29bf7706" prot="public" static="no">
        <name>IDENTIFIER_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Identifiers should be 32 bytes on the Wickr system, this requirement could drop or change in the future </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="43" column="9" bodyfile="src/crypto/identity.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="identity_8h_1a1e74a547b032c690ad2bc678ed241223" prot="public" static="no">
        <name>wickr_identity_type</name>
        <enumvalue id="identity_8h_1a1e74a547b032c690ad2bc678ed241223a1542393cea43ab2900d2418e9b39f4a7" prot="public">
          <name>IDENTITY_TYPE_ROOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="identity_8h_1a1e74a547b032c690ad2bc678ed241223a57d52ad1aafc126836057ce45358afb4" prot="public">
          <name>IDENTITY_TYPE_NODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="47" column="1" bodyfile="src/crypto/identity.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="group__wickr__identity_1ga78aefa3835eb13ca75c0129583b5ebfa" prot="public" static="no">
        <name>wickr_identity_chain_status</name>
        <enumvalue id="group__wickr__identity_1gga78aefa3835eb13ca75c0129583b5ebfaa5b040fe6ae99a667fbed5e4593da06e1" prot="public">
          <name>IDENTITY_CHAIN_STATUS_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wickr__identity_1gga78aefa3835eb13ca75c0129583b5ebfaa3511d78b8997d40c179376c2303dd133" prot="public">
          <name>IDENTITY_CHAIN_STATUS_VALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wickr__identity_1gga78aefa3835eb13ca75c0129583b5ebfaa92b4d59d2888af7720a65d751e74246e" prot="public">
          <name>IDENTITY_CHAIN_STATUS_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Identity chain status</para><para>UNKNOWN - Signature validation has never been attempted on the chain VALID - Signature validation has been attempted and has passed on the chain INVALID - Signature validation has been attempted and has failed on chain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="60" column="1" bodyfile="src/crypto/identity.h" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="identity_8h_1af289cd321d17ef25cb111538e348760f" prot="public" static="no">
        <type>struct <ref refid="structwickr__identity" kindref="compound">wickr_identity</ref></type>
        <definition>typedef struct wickr_identity wickr_identity_t</definition>
        <argsstring></argsstring>
        <name>wickr_identity_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="63" column="1" bodyfile="src/crypto/identity.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="identity_8h_1a6b5c6415f3239ce45c56104801c22e90" prot="public" static="no">
        <type>struct <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref></type>
        <definition>typedef struct wickr_identity_chain wickr_identity_chain_t</definition>
        <argsstring></argsstring>
        <name>wickr_identity_chain_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="63" column="1" bodyfile="src/crypto/identity.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__identity_1ga75bfef275a250a32784231e8c042913b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
        <definition>wickr_identity_t* wickr_identity_create</definition>
        <argsstring>(wickr_identity_type type, wickr_buffer_t *identifier, wickr_ec_key_t *sig_key, wickr_ecdsa_result_t *signature)</argsstring>
        <name>wickr_identity_create</name>
        <param>
          <type>wickr_identity_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
          <declname>sig_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref> *</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an identity from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sig_key</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity" kindref="compound">wickr_identity</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity that takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga32097764e57e70d85a2e1277146495c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref> *</type>
        <definition>wickr_ecdsa_result_t* wickr_identity_sign</definition>
        <argsstring>(const wickr_identity_t *identity, const wickr_crypto_engine_t *engine, const wickr_buffer_t *data)</argsstring>
        <name>wickr_identity_sign</name>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>identity</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sign provided data using an identity signing key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identity</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity to use for signing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine supporting signatures using the identity&apos;s signing key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to sign </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an ECDSA result containing a signature of &apos;data&apos; using the &apos;sig_key&apos; property of &apos;identity&apos;. NULL if the provided identity does not contain a private signing key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1gae820c1efc090fef6a8d27dd700316023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
        <definition>wickr_identity_t* wickr_node_identity_gen</definition>
        <argsstring>(const wickr_crypto_engine_t *engine, const wickr_identity_t *root_identity)</argsstring>
        <name>wickr_node_identity_gen</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>root_identity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a new random node identity, given a root identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine supporting random Elliptical Curve Key generation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root_identity</parametername>
</parameternamelist>
<parameterdescription>
<para>a root identity that supports generating signatures with a private signing key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated node identity signing by root identity &apos;root_identity&apos;. The &apos;identifier&apos; property of the node is generated at random to be &apos;IDENTIFIER_LEN&apos; in length (currently 32 bytes). NULL if root_identity is not a root, or it does not contain a private signing key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga14d1fb3ddd1dbd7797eb9b628eef99fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
        <definition>wickr_identity_t* wickr_identity_copy</definition>
        <argsstring>(const wickr_identity_t *source)</argsstring>
        <name>wickr_identity_copy</name>
        <param>
          <type>const <ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga9e4a0f3736d52836c9a9fc61794c8ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_identity_destroy</definition>
        <argsstring>(wickr_identity_t **identity)</argsstring>
        <name>wickr_identity_destroy</name>
        <param>
          <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> **</type>
          <declname>identity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an identity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identity</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the identity to destroy. All properties of &apos;*identity&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga79551385194ba6b044b676ce5c7400e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
        <definition>wickr_identity_chain_t* wickr_identity_chain_create</definition>
        <argsstring>(wickr_identity_t *root, wickr_identity_t *node)</argsstring>
        <name>wickr_identity_chain_create</name>
        <param>
          <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an identity chain from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity chain that takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1gac9d708d340abcd0b54d87434b71d2d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
        <definition>wickr_identity_chain_t* wickr_identity_chain_copy</definition>
        <argsstring>(const wickr_identity_chain_t *source)</argsstring>
        <name>wickr_identity_chain_copy</name>
        <param>
          <type>const <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an identity chain</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the identity chain to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated identity chain holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1ga12f5b33c4947b6a2ca3df3bdaacafa10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wickr_identity_chain_validate</definition>
        <argsstring>(const wickr_identity_chain_t *chain, const wickr_crypto_engine_t *engine)</argsstring>
        <name>wickr_identity_chain_validate</name>
        <param>
          <type>const <ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> *</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref> *</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify the validity of an identity chain</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>the chain to validate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>a crypto engine that supports verifying signatures </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the &apos;signature&apos; of the &apos;node&apos; property of &apos;chain&apos; can be properly verified with the public &apos;sig_key&apos; from the &apos;root&apos; property of &apos;chain&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__identity_1gadbddf6d49fddb2df103486970b3d564b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_identity_chain_destroy</definition>
        <argsstring>(wickr_identity_chain_t **chain)</argsstring>
        <name>wickr_identity_chain_destroy</name>
        <param>
          <type><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref> **</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an identity chain</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the identity chain to destroy. All properties of &apos;*chain&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/identity.h" line="220" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>identity_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>identity_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;eckey.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ecdsa.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto_engine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;root_keys.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="group__wickr__identity_1ga43bd60836203349a1c745d0d29bf7706" refkind="member"><highlight class="preprocessor">#define<sp/>IDENTIFIER_LEN<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>ROOT<sp/>and<sp/>NODE<sp/>identity<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>IDENTITY_TYPE_ROOT,<sp/>IDENTITY_TYPE_NODE<sp/>}<sp/>wickr_identity_type;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__wickr__identity_1ga78aefa3835eb13ca75c0129583b5ebfa" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>IDENTITY_CHAIN_STATUS_UNKNOWN,<sp/>IDENTITY_CHAIN_STATUS_VALID,<sp/>IDENTITY_CHAIN_STATUS_INVALID<sp/>}<sp/><ref refid="group__wickr__identity_1ga78aefa3835eb13ca75c0129583b5ebfa" kindref="member">wickr_identity_chain_status</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structwickr__identity" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__identity" kindref="compound">wickr_identity</ref><sp/>{</highlight></codeline>
<codeline lineno="85" refid="structwickr__identity_1a685dae977849c05c84ee4a0b10c9396d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>wickr_identity_type<sp/><ref refid="structwickr__identity_1a685dae977849c05c84ee4a0b10c9396d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="86" refid="structwickr__identity_1aed3657b22d83bb810b51ea1d1520b23e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__identity_1aed3657b22d83bb810b51ea1d1520b23e" kindref="member">identifier</ref>;</highlight></codeline>
<codeline lineno="87" refid="structwickr__identity_1a788a08ac03576cb76d9b2eaf81a7af3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref><sp/>*<ref refid="structwickr__identity_1a788a08ac03576cb76d9b2eaf81a7af3e" kindref="member">sig_key</ref>;</highlight></codeline>
<codeline lineno="88" refid="structwickr__identity_1afb6bd9f5f9707be10fb273ce8d0b5928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref><sp/>*<ref refid="structwickr__identity_1afb6bd9f5f9707be10fb273ce8d0b5928" kindref="member">signature</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__identity" kindref="compound">wickr_identity</ref><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structwickr__identity__chain" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref><sp/>{</highlight></codeline>
<codeline lineno="110" refid="structwickr__identity__chain_1acee365b411eb4a7e7c68c115d60e166e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>wickr_identity_chain_status<sp/><ref refid="structwickr__identity__chain_1acee365b411eb4a7e7c68c115d60e166e" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="111" refid="structwickr__identity__chain_1a0982b1510591138e2e7d0546741bc6e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="structwickr__identity__chain_1a0982b1510591138e2e7d0546741bc6e0" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="112" refid="structwickr__identity__chain_1a4343dae5f1c82057289c26e5c7bb1226" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="structwickr__identity__chain_1a4343dae5f1c82057289c26e5c7bb1226" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain</ref><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="group__wickr__identity_1ga75bfef275a250a32784231e8c042913b" kindref="member">wickr_identity_create</ref>(wickr_identity_type<sp/><ref refid="structwickr__identity_1a685dae977849c05c84ee4a0b10c9396d" kindref="member">type</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__identity_1aed3657b22d83bb810b51ea1d1520b23e" kindref="member">identifier</ref>,<sp/><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref><sp/>*<ref refid="structwickr__identity_1a788a08ac03576cb76d9b2eaf81a7af3e" kindref="member">sig_key</ref>,<sp/><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref><sp/>*<ref refid="structwickr__identity_1afb6bd9f5f9707be10fb273ce8d0b5928" kindref="member">signature</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="structwickr__ecdsa__result" kindref="compound">wickr_ecdsa_result_t</ref><sp/>*<ref refid="group__wickr__identity_1ga32097764e57e70d85a2e1277146495c9" kindref="member">wickr_identity_sign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*identity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/>*engine,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*data);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="group__wickr__identity_1gae820c1efc090fef6a8d27dd700316023" kindref="member">wickr_node_identity_gen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/>*engine,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*root_identity);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="group__wickr__identity_1ga14d1fb3ddd1dbd7797eb9b628eef99fe" kindref="member">wickr_identity_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__identity_1ga9e4a0f3736d52836c9a9fc61794c8ddd" kindref="member">wickr_identity_destroy</ref>(<ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>**identity);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*<ref refid="group__wickr__identity_1ga79551385194ba6b044b676ce5c7400e6" kindref="member">wickr_identity_chain_create</ref>(<ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="structwickr__identity__chain_1a0982b1510591138e2e7d0546741bc6e0" kindref="member">root</ref>,<sp/><ref refid="structwickr__identity" kindref="compound">wickr_identity_t</ref><sp/>*<ref refid="structwickr__identity__chain_1a4343dae5f1c82057289c26e5c7bb1226" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*<ref refid="group__wickr__identity_1gac9d708d340abcd0b54d87434b71d2d9e" kindref="member">wickr_identity_chain_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__wickr__identity_1ga12f5b33c4947b6a2ca3df3bdaacafa10" kindref="member">wickr_identity_chain_validate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>*chain,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/>*engine);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__identity_1gadbddf6d49fddb2df103486970b3d564b" kindref="member">wickr_identity_chain_destroy</ref>(<ref refid="structwickr__identity__chain" kindref="compound">wickr_identity_chain_t</ref><sp/>**chain);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>identity_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/identity.h"/>
  </compounddef>
</doxygen>
