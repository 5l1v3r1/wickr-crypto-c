<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structwickr__dev__info" kind="struct" language="C++" prot="public">
    <compoundname>wickr_dev_info</compoundname>
    <includes refid="devinfo_8h" local="no">devinfo.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structwickr__dev__info_1a78032877515c2b4cf67c48e4eb6fb0f7" prot="public" static="no" mutable="no">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_dev_info::dev_salt</definition>
        <argsstring></argsstring>
        <name>dev_salt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a random salt used in generating &apos;msg_proto_id&apos; and &apos;srv_comm_id&apos;. Ideally, this salt value is generated and stored on the device in a way it is quickly retrived. It does not need to be transmitted off the device, as it simply provides some entropy to Wickr specific identifier generation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/devinfo.h" line="57" column="1" bodyfile="src/crypto/devinfo.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structwickr__dev__info_1a084d0cd9e73d9f74f62c9e9abb85436f" prot="public" static="no" mutable="no">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_dev_info::system_salt</definition>
        <argsstring></argsstring>
        <name>system_salt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a salt that is optimally bound to a hardware context of the device the library is executing on. On systems where getting hardware specific values are not available, this salt can also be randomly generated and stored on the device. The system salt is used to salt your device storage key, and thus binding to a hardware value that is not recorded on disk could increase security of your local storage in some scenarios. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/devinfo.h" line="58" column="1" bodyfile="src/crypto/devinfo.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structwickr__dev__info_1a864ad03c4d10f51fe6251059007276d2" prot="public" static="no" mutable="no">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_dev_info::msg_proto_id</definition>
        <argsstring></argsstring>
        <name>msg_proto_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>messaging protocol identifier shared with devices transmitting data to you. Used as context within key exchanges where a context using the associated &apos;dev_salt&apos; and &apos;system_salt&apos; is the recipient </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/devinfo.h" line="59" column="1" bodyfile="src/crypto/devinfo.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structwickr__dev__info_1af5f2ff06ae74fcec85106f6ffd77c008" prot="public" static="no" mutable="no">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_dev_info::srv_comm_id</definition>
        <argsstring></argsstring>
        <name>srv_comm_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>server communication identifier transmitted to the server and used for salting operations outside of the messaging component of Wickr, such as communicating with the Wickr Server API. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/devinfo.h" line="60" column="1" bodyfile="src/crypto/devinfo.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Device Information used to make a uniquely identifying set of data for each context running the Wickr Protocol. </para>    </briefdescription>
    <detaileddescription>
<para>These identifiers are not required to be absolutely unique from a security perspective, but having a good amount of entropy in them is a nice property to attempt to achieve. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="93">
        <label>wickr_buffer</label>
        <link refid="structwickr__buffer"/>
      </node>
      <node id="92">
        <label>wickr_dev_info</label>
        <link refid="structwickr__dev__info"/>
        <childnode refid="93" relation="usage">
          <edgelabel>system_salt</edgelabel>
          <edgelabel>srv_comm_id</edgelabel>
          <edgelabel>msg_proto_id</edgelabel>
          <edgelabel>dev_salt</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/crypto/devinfo.h" line="56" column="1" bodyfile="src/crypto/devinfo.h" bodystart="56" bodyend="61"/>
    <listofallmembers>
      <member refid="structwickr__dev__info_1a78032877515c2b4cf67c48e4eb6fb0f7" prot="public" virt="non-virtual"><scope>wickr_dev_info</scope><name>dev_salt</name></member>
      <member refid="structwickr__dev__info_1a864ad03c4d10f51fe6251059007276d2" prot="public" virt="non-virtual"><scope>wickr_dev_info</scope><name>msg_proto_id</name></member>
      <member refid="structwickr__dev__info_1af5f2ff06ae74fcec85106f6ffd77c008" prot="public" virt="non-virtual"><scope>wickr_dev_info</scope><name>srv_comm_id</name></member>
      <member refid="structwickr__dev__info_1a084d0cd9e73d9f74f62c9e9abb85436f" prot="public" virt="non-virtual"><scope>wickr_dev_info</scope><name>system_salt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
