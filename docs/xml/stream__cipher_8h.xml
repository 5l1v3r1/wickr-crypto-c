<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stream__cipher_8h" kind="file" language="C++">
    <compoundname>stream_cipher.h</compoundname>
    <includes refid="crypto__engine_8h" local="yes">crypto_engine.h</includes>
    <includes refid="stream__iv_8h" local="yes">stream_iv.h</includes>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <incdepgraph>
      <node id="447">
        <label>stdbool.h</label>
      </node>
      <node id="452">
        <label>kdf.h</label>
        <link refid="kdf_8h_source"/>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>stdint.h</label>
      </node>
      <node id="446">
        <label>stdlib.h</label>
      </node>
      <node id="443">
        <label>src/crypto/stream_cipher.h</label>
        <link refid="stream__cipher_8h"/>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>limits.h</label>
      </node>
      <node id="453">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>cipher.h</label>
        <link refid="cipher_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="454">
        <label>eckey.h</label>
        <link refid="eckey_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>ecdsa.h</label>
        <link refid="ecdsa_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>stream_iv.h</label>
        <link refid="stream__iv_8h_source"/>
        <childnode refid="444" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>stdio.h</label>
      </node>
      <node id="444">
        <label>crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="459">
        <label>src/crypto/stream_cipher.h</label>
        <link refid="stream__cipher_8h"/>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__stream__key" prot="public">wickr_stream_key</innerclass>
    <innerclass refid="structwickr__stream__ctx" prot="public">wickr_stream_ctx</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="stream__cipher_8h_1aace0c067efdc7a34dc2c5b2f62673675" prot="public" static="no">
        <name>PACKET_PER_EVO_MIN</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="28" column="9" bodyfile="src/crypto/stream_cipher.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stream__cipher_8h_1ab1a4700741317b1b4d5859e0070439d6" prot="public" static="no">
        <name>PACKET_PER_EVO_DEFAULT</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="29" column="9" bodyfile="src/crypto/stream_cipher.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stream__cipher_8h_1a7e2e980aefee3da1f3fc694a86f97cbf" prot="public" static="no">
        <name>PACKET_PER_EVO_MAX</name>
        <initializer>32768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="30" column="9" bodyfile="src/crypto/stream_cipher.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="stream__cipher_8h_1a2f0c1b6a17b2b970cf3acc11b9f9542b" prot="public" static="no">
        <name>wickr_stream_direction</name>
        <enumvalue id="stream__cipher_8h_1a2f0c1b6a17b2b970cf3acc11b9f9542baf02cd03e185ab7892bcfa79c2782cdf8" prot="public">
          <name>STREAM_DIRECTION_ENCODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="stream__cipher_8h_1a2f0c1b6a17b2b970cf3acc11b9f9542bae1dfa47e1ebf76115c5d4b7895e84896" prot="public">
          <name>STREAM_DIRECTION_DECODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="32" column="1" bodyfile="src/crypto/stream_cipher.h" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="stream__cipher_8h_1a95f779d5f3ca4c486d9ab3d5a334a572" prot="public" static="no">
        <type>struct <ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key</ref></type>
        <definition>typedef struct wickr_stream_key wickr_stream_key_t</definition>
        <argsstring></argsstring>
        <name>wickr_stream_key_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="49" column="1" bodyfile="src/crypto/stream_cipher.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="stream__cipher_8h_1aeb7fbf0cb255f554e650fd40b52a300a" prot="public" static="no">
        <type>struct <ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx</ref></type>
        <definition>typedef struct wickr_stream_ctx wickr_stream_ctx_t</definition>
        <argsstring></argsstring>
        <name>wickr_stream_ctx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="49" column="1" bodyfile="src/crypto/stream_cipher.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__stream_1ga54449667a25d9e64cd04dae58dd76418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
        <definition>wickr_stream_key_t* wickr_stream_key_create</definition>
        <argsstring>(wickr_cipher_key_t *cipher_key, wickr_buffer_t *evolution_key, uint32_t packets_per_evolution)</argsstring>
        <name>wickr_stream_key_create</name>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>cipher_key</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>evolution_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packets_per_evolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a stream key from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cipher_key</parametername>
</parameternamelist>
<parameterdescription>
<para>see documentation of &apos;<ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key</ref>&apos; structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evolution_key</parametername>
</parameternamelist>
<parameterdescription>
<para>see documentation of &apos;<ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key</ref>&apos; structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packets_per_evolution</parametername>
</parameternamelist>
<parameterdescription>
<para>see documentation of &apos;<ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key</ref>&apos; structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated stream key owning the properties passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__stream_1ga9e95dd486dbe2f3db647c65042601b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
        <definition>wickr_stream_key_t* wickr_stream_key_create_rand</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_cipher_t cipher, uint32_t packets_per_evolution)</argsstring>
        <name>wickr_stream_key_create_rand</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref></type>
          <declname>cipher</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>packets_per_evolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a random stream key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>the crypto engine to use for secure random cipher key generation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cipher</parametername>
</parameternamelist>
<parameterdescription>
<para>the cipher to use for generation of the internal &apos;cipher_key&apos; property </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packets_per_evolution</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times this key should be used before it evoloves </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated stream key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__stream_1ga0201dd73adf773834d7dbb4bbc307fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
        <definition>wickr_stream_key_t* wickr_stream_key_copy</definition>
        <argsstring>(const wickr_stream_key_t *stream_key)</argsstring>
        <name>wickr_stream_key_copy</name>
        <param>
          <type>const <ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
          <declname>stream_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a stream key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream_key</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream key to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated stream key holding a deep copy of properties from &apos;stream_key&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1ae1540c98a88e2f62e96fb2ee209e2290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_stream_key_serialize</definition>
        <argsstring>(const wickr_stream_key_t *key)</argsstring>
        <name>wickr_stream_key_serialize</name>
        <param>
          <type>const <ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a stream key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to serialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a serialized protocol buffer object representing the properties of &apos;key&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1adf1565329fed927531e1a14334ed23e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
        <definition>wickr_stream_key_t* wickr_stream_key_create_from_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_stream_key_create_from_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a stream key from a serialized buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to parse into a stream key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated stream key represented by &apos;buffer&apos; or NULL if parsing buffer fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__stream_1ga3bb3dec760c5b7f3a1bd2d0bb13bcc79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_stream_key_destroy</definition>
        <argsstring>(wickr_stream_key_t **stream_key)</argsstring>
        <name>wickr_stream_key_destroy</name>
        <param>
          <type><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> **</type>
          <declname>stream_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a stream key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream_key</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the stream key to destroy. All properties of &apos;*stream_key&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1a0b5c513a3e0958dc7fd4f8455206e32e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref> *</type>
        <definition>wickr_stream_ctx_t* wickr_stream_ctx_create</definition>
        <argsstring>(const wickr_crypto_engine_t engine, wickr_stream_key_t *stream_key, wickr_stream_direction direction)</argsstring>
        <name>wickr_stream_ctx_create</name>
        <param>
          <type>const <ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref></type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref> *</type>
          <declname>stream_key</declname>
        </param>
        <param>
          <type>wickr_stream_direction</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a stream context</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>engine</parametername>
</parameternamelist>
<parameterdescription>
<para>see <ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx</ref> documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_key</parametername>
</parameternamelist>
<parameterdescription>
<para>see <ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx</ref> documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>see <ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx</ref> documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated stream context owning the properties passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1a707b685e35eb437c33f5ec32c6760005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref> *</type>
        <definition>wickr_stream_ctx_t* wickr_stream_ctx_copy</definition>
        <argsstring>(const wickr_stream_ctx_t *ctx)</argsstring>
        <name>wickr_stream_ctx_copy</name>
        <param>
          <type>const <ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a stream key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream context to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated stream context holding a deep copy of properties from &apos;ctx&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1a621a3ec801ab996b4fab1fe905c450bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
        <definition>wickr_cipher_result_t* wickr_stream_ctx_encode</definition>
        <argsstring>(wickr_stream_ctx_t *ctx, const wickr_buffer_t *data, const wickr_buffer_t *aad, uint64_t seq_num)</argsstring>
        <name>wickr_stream_ctx_encode</name>
        <param>
          <type><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seq_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode a packet</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context to use for encoding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to encode using the context&apos;s key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>additional data to authenticate with the ciphertext </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequence number assoiciated with &apos;data&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cipher result representing &apos;data&apos; encrypted with &apos;ctx-&gt;key&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1aa1eb323694f2c1652b51127b0b89138c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_stream_ctx_decode</definition>
        <argsstring>(wickr_stream_ctx_t *ctx, const wickr_cipher_result_t *data, const wickr_buffer_t *aad, uint64_t seq_num)</argsstring>
        <name>wickr_stream_ctx_decode</name>
        <param>
          <type><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seq_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode a packet</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context to use for decoding </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to decode using the context&apos;s key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>additional data to authenticate with the ciphertext </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequence number assoiciated with &apos;data&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer representing &apos;data&apos; decrypted with &apos;ctx-&gt;key&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="stream__cipher_8h_1a05260bfce1f50352cad32e0354c28a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_stream_ctx_destroy</definition>
        <argsstring>(wickr_stream_ctx_t **ctx)</argsstring>
        <name>wickr_stream_ctx_destroy</name>
        <param>
          <type><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref> **</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a stream context</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the stream context to destroy. All properties of &apos;*ctx&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/stream_cipher.h" line="200" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>stream_cipher_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stream_cipher_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto_engine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stream_iv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_PER_EVO_MIN<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_PER_EVO_DEFAULT<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACKET_PER_EVO_MAX<sp/>32768</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>STREAM_DIRECTION_ENCODE,<sp/>STREAM_DIRECTION_DECODE<sp/>}<sp/>wickr_stream_direction;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structwickr__stream__key" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="structwickr__stream__key_1a3d957a51193dda882cb89ced2ceeb91e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__stream__key_1a3d957a51193dda882cb89ced2ceeb91e" kindref="member">cipher_key</ref>;</highlight></codeline>
<codeline lineno="52" refid="structwickr__stream__key_1ae7210bd67e61cb4c38733a237dae95d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__stream__key_1ae7210bd67e61cb4c38733a237dae95d9" kindref="member">evolution_key</ref>;</highlight></codeline>
<codeline lineno="53" refid="structwickr__stream__key_1a78777e4c64048b6dae38f8772744194e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structwickr__stream__key_1a78777e4c64048b6dae38f8772744194e" kindref="member">packets_per_evolution</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key</ref><sp/><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structwickr__stream__ctx" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="84" refid="structwickr__stream__ctx_1a14ef322bbeec579ded7f35c5aeb0d3fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__stream__ctx_1a14ef322bbeec579ded7f35c5aeb0d3fa" kindref="member">engine</ref>;</highlight></codeline>
<codeline lineno="85" refid="structwickr__stream__ctx_1a3598b3c0415d13fafab6633f8c00a3c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*<ref refid="structwickr__stream__ctx_1a3598b3c0415d13fafab6633f8c00a3c8" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="86" refid="structwickr__stream__ctx_1a67c5066e87dbdc026358563daa51f174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__stream__iv" kindref="compound">wickr_stream_iv_t</ref><sp/>*<ref refid="structwickr__stream__ctx_1a67c5066e87dbdc026358563daa51f174" kindref="member">iv_factory</ref>;</highlight></codeline>
<codeline lineno="87" refid="structwickr__stream__ctx_1abf2c6ab54e1663e6a47e310fd68b3b3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structwickr__stream__ctx_1abf2c6ab54e1663e6a47e310fd68b3b3f" kindref="member">last_seq</ref>;</highlight></codeline>
<codeline lineno="88" refid="structwickr__stream__ctx_1a34c622c3ca61348321261ee7a9c3ff91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>wickr_stream_direction<sp/><ref refid="structwickr__stream__ctx_1a34c622c3ca61348321261ee7a9c3ff91" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx</ref><sp/><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*<ref refid="group__wickr__stream_1ga54449667a25d9e64cd04dae58dd76418" kindref="member">wickr_stream_key_create</ref>(<ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="structwickr__stream__key_1a3d957a51193dda882cb89ced2ceeb91e" kindref="member">cipher_key</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__stream__key_1ae7210bd67e61cb4c38733a237dae95d9" kindref="member">evolution_key</ref>,<sp/>uint32_t<sp/><ref refid="structwickr__stream__key_1a78777e4c64048b6dae38f8772744194e" kindref="member">packets_per_evolution</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*<ref refid="group__wickr__stream_1ga9e95dd486dbe2f3db647c65042601b34" kindref="member">wickr_stream_key_create_rand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__stream__ctx_1a14ef322bbeec579ded7f35c5aeb0d3fa" kindref="member">engine</ref>,<sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/>cipher,<sp/>uint32_t<sp/><ref refid="structwickr__stream__key_1a78777e4c64048b6dae38f8772744194e" kindref="member">packets_per_evolution</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*<ref refid="group__wickr__stream_1ga0201dd73adf773834d7dbb4bbc307fae" kindref="member">wickr_stream_key_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*stream_key);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*wickr_stream_key_serialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*<ref refid="structwickr__stream__ctx_1a3598b3c0415d13fafab6633f8c00a3c8" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*wickr_stream_key_create_from_buffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__stream_1ga3bb3dec760c5b7f3a1bd2d0bb13bcc79" kindref="member">wickr_stream_key_destroy</ref>(<ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>**stream_key);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref><sp/>*wickr_stream_ctx_create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__crypto__engine" kindref="compound">wickr_crypto_engine_t</ref><sp/><ref refid="structwickr__stream__ctx_1a14ef322bbeec579ded7f35c5aeb0d3fa" kindref="member">engine</ref>,<sp/><ref refid="structwickr__stream__key" kindref="compound">wickr_stream_key_t</ref><sp/>*stream_key,<sp/>wickr_stream_direction<sp/><ref refid="structwickr__stream__ctx_1a34c622c3ca61348321261ee7a9c3ff91" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref><sp/>*wickr_stream_ctx_copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*wickr_stream_ctx_encode(<ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*aad,<sp/>uint64_t<sp/>seq_num);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*wickr_stream_ctx_decode(<ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*aad,<sp/>uint64_t<sp/>seq_num);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wickr_stream_ctx_destroy(<ref refid="structwickr__stream__ctx" kindref="compound">wickr_stream_ctx_t</ref><sp/>**ctx);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>stream_cipher_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/stream_cipher.h"/>
  </compounddef>
</doxygen>
