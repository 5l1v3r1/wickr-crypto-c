<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__wickr__ec__curve" kind="group">
    <compoundname>wickr_ec_curve</compoundname>
    <title>wickr_ec_curve_t</title>
    <innerclass refid="structwickr__ec__key" prot="public">wickr_ec_key</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__ec__curve_1ga912f46bc12a39f57d8d1b87a639f7cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
        <definition>wickr_ec_key_t* wickr_ec_key_create</definition>
        <argsstring>(wickr_ec_curve_t curve, wickr_buffer_t *pub_data, wickr_buffer_t *pri_data)</argsstring>
        <name>wickr_ec_key_create</name>
        <param>
          <type><ref refid="structwickr__ec__curve" kindref="compound">wickr_ec_curve_t</ref></type>
          <declname>curve</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>pub_data</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>pri_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an Elliptical Curve Keypair from components</para><para>NOTE: This function does not have the capability to generate key pair information, it simply constructs the data structure using pre-generated components. A crypto engine is required to generate random keypairs</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>curve</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pub_data</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pri_data</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key</ref>&apos; property documentation. May be NULL to represent a public key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated elliptical key representing either a public or private key. Takes ownership of the passed inputs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/eckey.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ec__curve_1gaf12eff11d78b2ce9ff32710406d58d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
        <definition>wickr_ec_key_t* wickr_ec_key_copy</definition>
        <argsstring>(const wickr_ec_key_t *source)</argsstring>
        <name>wickr_ec_key_copy</name>
        <param>
          <type>const <ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an EC Key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the EC key to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated EC key holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/eckey.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ec__curve_1gac18ac86b270f540bf5a55ad271ab0568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_ec_key_destroy</definition>
        <argsstring>(wickr_ec_key_t **key)</argsstring>
        <name>wickr_ec_key_destroy</name>
        <param>
          <type><ref refid="structwickr__ec__key" kindref="compound">wickr_ec_key_t</ref> **</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy an EC Key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the key to destroy. All properties of &apos;*key&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/eckey.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__ec__curve_1ga35d0968431b69993b7a6e3351d503d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structwickr__ec__curve" kindref="compound">wickr_ec_curve_t</ref> *</type>
        <definition>const wickr_ec_curve_t* wickr_ec_curve_find</definition>
        <argsstring>(uint8_t identifier)</argsstring>
        <name>wickr_ec_curve_find</name>
        <param>
          <type>uint8_t</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find an EC key by numerical identifier</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier in which to return the curve information for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the requested curve information, or NULL if no matching information can be found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/eckey.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
