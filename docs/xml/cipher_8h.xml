<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cipher_8h" kind="file" language="C++">
    <compoundname>cipher.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="buffer_8h" local="yes">buffer.h</includes>
    <includes refid="kdf_8h" local="yes">kdf.h</includes>
    <includedby refid="crypto__engine_8h" local="yes">src/crypto/crypto_engine.h</includedby>
    <includedby refid="openssl__suite_8h" local="yes">src/crypto/openssl_suite.h</includedby>
    <includedby refid="protobuf__util_8h" local="yes">src/crypto/protobuf_util.h</includedby>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <incdepgraph>
      <node id="61">
        <label>stdbool.h</label>
      </node>
      <node id="65">
        <label>kdf.h</label>
        <link refid="kdf_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>stdint.h</label>
      </node>
      <node id="59">
        <label>stdlib.h</label>
      </node>
      <node id="63">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>limits.h</label>
      </node>
      <node id="66">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>src/crypto/cipher.h</label>
        <link refid="cipher_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="71">
        <label>src/crypto/identity.h</label>
        <link refid="identity_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>src/crypto/storage.h</label>
        <link refid="storage_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>src/crypto/stream_cipher.h</label>
        <link refid="stream__cipher_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>src/crypto/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>src/crypto/devinfo.h</label>
        <link refid="devinfo_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>src/crypto/ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>src/crypto/root_keys.h</label>
        <link refid="root__keys_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
      <node id="79">
        <label>src/crypto/protobuf_util.h</label>
        <link refid="protobuf__util_8h_source"/>
      </node>
      <node id="74">
        <label>src/crypto/protocol.h</label>
        <link refid="protocol_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>src/crypto/cipher.h</label>
        <link refid="cipher_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>src/crypto/openssl_suite.h</label>
        <link refid="openssl__suite_8h_source"/>
      </node>
      <node id="81">
        <label>src/crypto/stream_iv.h</label>
        <link refid="stream__iv_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>src/crypto/crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__cipher" prot="public">wickr_cipher</innerclass>
    <innerclass refid="structwickr__cipher__result" prot="public">wickr_cipher_result</innerclass>
    <innerclass refid="structwickr__cipher__key" prot="public">wickr_cipher_key</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cipher_8h_1a0375b36acd7fd02f87272b0af7779b73" prot="public" static="no">
        <name>wickr_cipher_id</name>
        <enumvalue id="cipher_8h_1a0375b36acd7fd02f87272b0af7779b73ad5d5d81650480d598d0fefc428b316b1" prot="public">
          <name>CIPHER_ID_AES256_GCM</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cipher_8h_1a0375b36acd7fd02f87272b0af7779b73a2f820bc940302cf959461e1df9dbf84d" prot="public">
          <name>CIPHER_ID_AES256_CTR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="35" column="1" bodyfile="src/crypto/cipher.h" bodystart="35" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cipher_8h_1a1b7bf0e54ae64e2b86600e6a26c06b03" prot="public" static="no">
        <type>struct <ref refid="structwickr__cipher" kindref="compound">wickr_cipher</ref></type>
        <definition>typedef struct wickr_cipher wickr_cipher_t</definition>
        <argsstring></argsstring>
        <name>wickr_cipher_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="53" column="1" bodyfile="src/crypto/cipher.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cipher_8h_1a25cde71054835ff8887ed939558286e2" prot="public" static="no">
        <type>struct <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result</ref></type>
        <definition>typedef struct wickr_cipher_result wickr_cipher_result_t</definition>
        <argsstring></argsstring>
        <name>wickr_cipher_result_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="78" column="1" bodyfile="src/crypto/cipher.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cipher_8h_1aa22dff19cb4c70bd8687678f15d4d64f" prot="public" static="no">
        <type>struct <ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key</ref></type>
        <definition>typedef struct wickr_cipher_key wickr_cipher_key_t</definition>
        <argsstring></argsstring>
        <name>wickr_cipher_key_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="174" column="1" bodyfile="src/crypto/cipher.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cipher_8h_1a2af95d36c0a8047c43f6cf02e49d8853" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref></type>
        <definition>const wickr_cipher_t CIPHER_AES256_GCM</definition>
        <argsstring></argsstring>
        <name>CIPHER_AES256_GCM</name>
        <initializer>= { CIPHER_ID_AES256_GCM, 32, 12, 16, true }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="66" column="1" bodyfile="src/crypto/cipher.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cipher_8h_1ae8371e0cef32c6f92ce09d327b4f806a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref></type>
        <definition>const wickr_cipher_t CIPHER_AES256_CTR</definition>
        <argsstring></argsstring>
        <name>CIPHER_AES256_CTR</name>
        <initializer>= { CIPHER_ID_AES256_CTR, 32, 16, 0, false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="67" column="1" bodyfile="src/crypto/cipher.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__cipher_1ga2b7a8bc33e1fd5af61763398ea9a4013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref> *</type>
        <definition>const wickr_cipher_t* wickr_cipher_find</definition>
        <argsstring>(uint8_t cipher_id)</argsstring>
        <name>wickr_cipher_find</name>
        <param>
          <type>uint8_t</type>
          <declname>cipher_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a supported cipher by identifier. When cipher results are serialized they contain the identifier of the cipher that was used to create them as the first byte</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cipher_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier of the cipher </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cipher with identifier &apos;cipher_id&apos;. NULL if cipher is not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1ga234b60967d0b3ef0088ca3ac30755dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
        <definition>wickr_cipher_result_t* wickr_cipher_result_create</definition>
        <argsstring>(wickr_cipher_t cipher, wickr_buffer_t *iv, wickr_buffer_t *cipher_text, wickr_buffer_t *auth_tag)</argsstring>
        <name>wickr_cipher_result_create</name>
        <param>
          <type><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref></type>
          <declname>cipher</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>cipher_text</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>auth_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a cipher result from individual components.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cipher</parametername>
</parameternamelist>
<parameterdescription>
<para>the cipher used in the cipher operation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iv</parametername>
</parameternamelist>
<parameterdescription>
<para>the initialization vector used in the cipher operation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cipher_text</parametername>
</parameternamelist>
<parameterdescription>
<para>the output bytes of a cipher function using &apos;cipher&apos; and &apos;iv&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the authentication tag associated with &apos;cipher_text&apos;. If &apos;cipher&apos; is authenticated this property is required, otherwise it should be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated cipher result that takes ownership of the passed inputs, or NULL if allocation fails </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1gace82050fcc8b7932df9a9e8109a2fc1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
        <definition>wickr_cipher_result_t* wickr_cipher_result_copy</definition>
        <argsstring>(const wickr_cipher_result_t *result)</argsstring>
        <name>wickr_cipher_result_copy</name>
        <param>
          <type>const <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a cipher result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the source of the copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated cipher_result that contains deep copies of all the properties of &apos;result&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1gad5d22ca53abc4397d88040f0f8003021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_cipher_result_destroy</definition>
        <argsstring>(wickr_cipher_result_t **result)</argsstring>
        <name>wickr_cipher_result_destroy</name>
        <param>
          <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> **</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a cipher result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the cipher result to destroy. Destruction will also destroy the individual properties of &apos;result&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1ga3f1b679c199987148952816b6fc4c009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wickr_cipher_result_is_valid</definition>
        <argsstring>(const wickr_cipher_result_t *result)</argsstring>
        <name>wickr_cipher_result_is_valid</name>
        <param>
          <type>const <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if a cipher result is formed correctly</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the cipher result to validate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if result is structured correctly, false if a required field is missing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1gacda386115dc52f83a0518f8ac0dad6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_cipher_result_serialize</definition>
        <argsstring>(const wickr_cipher_result_t *result)</argsstring>
        <name>wickr_cipher_result_serialize</name>
        <param>
          <type>const <ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a cipher result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the cipher result to serialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer containing bytes representing the cipher result in the following format: | CIPHER_ID | IV | AUTH_TAG (IF REQUIRED) | CIPHER_TEXT | </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1gad42314812c457855c3799632494c91a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref> *</type>
        <definition>wickr_cipher_result_t* wickr_cipher_result_from_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_cipher_result_from_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a cipher result from a serialized cipher result buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer created by &apos;wickr_cipher_result_serialize&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cipher result parsed from &apos;buffer&apos;. This function makes a copy of all bytes as it is parsing, so the resulting cipher result owns its properties. Returns NULL on parsing failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1ga73e2a916ba0ff19517e30a65a68390f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
        <definition>wickr_cipher_key_t* wickr_cipher_key_create</definition>
        <argsstring>(wickr_cipher_t cipher, wickr_buffer_t *key_data)</argsstring>
        <name>wickr_cipher_key_create</name>
        <param>
          <type><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref></type>
          <declname>cipher</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>key_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a key from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cipher</parametername>
</parameternamelist>
<parameterdescription>
<para>the cipher this key is to be used by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_data</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer representing the raw bytes of the key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated cipher key that takes ownership over &apos;key_data&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1gaa473bc83f82d6353aa6f4cb4e36bf4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
        <definition>wickr_cipher_key_t* wickr_cipher_key_copy</definition>
        <argsstring>(const wickr_cipher_key_t *key)</argsstring>
        <name>wickr_cipher_key_copy</name>
        <param>
          <type>const <ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a cipher key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated cipher key holding a deep copy of the properties of &apos;key&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1ga45790b3023ccb261c03346b069aca763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_cipher_key_destroy</definition>
        <argsstring>(wickr_cipher_key_t **key)</argsstring>
        <name>wickr_cipher_key_destroy</name>
        <param>
          <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> **</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a cipher key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the key to destroy. All properties of &apos;*key&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1ga8716aebf03497c379d5ff81fe32cde32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_cipher_key_serialize</definition>
        <argsstring>(const wickr_cipher_key_t *key)</argsstring>
        <name>wickr_cipher_key_serialize</name>
        <param>
          <type>const <ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a cipher key</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to serialize to a buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated buffer containing properties of &apos;key&apos; in the following format: | CIPHER_ID | KEY_DATA | </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__cipher_1ga1c073b87f2141cf35a1d91ba10f9e5ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref> *</type>
        <definition>wickr_cipher_key_t* wickr_cipher_key_from_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_cipher_key_from_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a cipher key from serialized bytes</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer created by &apos;wickr_cipher_key_serialize&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cipher key parsed from &apos;buffer&apos;. This function makes a copy of all bytes as it is parsing, so the resulting cipher key owns its properties. Returns NULL on parsing failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/cipher.h" line="251" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>cipher_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cipher_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kdf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>CIPHER_ID_AES256_GCM<sp/>=<sp/>0,<sp/>CIPHER_ID_AES256_CTR<sp/>=<sp/>1<sp/>}<sp/>wickr_cipher_id;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structwickr__cipher" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__cipher" kindref="compound">wickr_cipher</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="structwickr__cipher_1a2ce240f5bd396df05ddd4f30ba944b36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>wickr_cipher_id<sp/><ref refid="structwickr__cipher_1a2ce240f5bd396df05ddd4f30ba944b36" kindref="member">cipher_id</ref>;</highlight></codeline>
<codeline lineno="58" refid="structwickr__cipher_1aec5724cc59d20ae5d7cbb73684b53457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwickr__cipher_1aec5724cc59d20ae5d7cbb73684b53457" kindref="member">key_len</ref>;</highlight></codeline>
<codeline lineno="59" refid="structwickr__cipher_1a1cd39366934a31345d63ff42deeac1e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwickr__cipher_1a1cd39366934a31345d63ff42deeac1e3" kindref="member">iv_len</ref>;</highlight></codeline>
<codeline lineno="60" refid="structwickr__cipher_1a5ec0af7f260a3f14e31ce8db899aa06e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwickr__cipher_1a5ec0af7f260a3f14e31ce8db899aa06e" kindref="member">auth_tag_len</ref>;</highlight></codeline>
<codeline lineno="61" refid="structwickr__cipher_1a21499cb78c9db301261c9d0d647b3e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher_1a21499cb78c9db301261c9d0d647b3e50" kindref="member">is_authenticated</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__cipher" kindref="compound">wickr_cipher</ref><sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/>CIPHER_AES256_GCM<sp/>=<sp/>{<sp/>CIPHER_ID_AES256_GCM,<sp/>32,<sp/>12,<sp/>16,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/>CIPHER_AES256_CTR<sp/>=<sp/>{<sp/>CIPHER_ID_AES256_CTR,<sp/>32,<sp/>16,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/>*<ref refid="group__wickr__cipher_1ga2b7a8bc33e1fd5af61763398ea9a4013" kindref="member">wickr_cipher_find</ref>(uint8_t<sp/><ref refid="structwickr__cipher_1a2ce240f5bd396df05ddd4f30ba944b36" kindref="member">cipher_id</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structwickr__cipher__result" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result</ref><sp/>{</highlight></codeline>
<codeline lineno="98" refid="structwickr__cipher__result_1a80f15a012dbe1342d0aaa6f3e7072aa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/><ref refid="structwickr__cipher__result_1a80f15a012dbe1342d0aaa6f3e7072aa9" kindref="member">cipher</ref>;</highlight></codeline>
<codeline lineno="99" refid="structwickr__cipher__result_1a741b49cc09cddfce1924e7a26ab8b35b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__result_1a741b49cc09cddfce1924e7a26ab8b35b" kindref="member">iv</ref>;</highlight></codeline>
<codeline lineno="100" refid="structwickr__cipher__result_1a29fe7c04025f39cc574ac41f846d167a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__result_1a29fe7c04025f39cc574ac41f846d167a" kindref="member">cipher_text</ref>;</highlight></codeline>
<codeline lineno="101" refid="structwickr__cipher__result_1aaaf0227a4c8f3288e221765d6dce371e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__result_1aaaf0227a4c8f3288e221765d6dce371e" kindref="member">auth_tag</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result</ref><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*<ref refid="group__wickr__cipher_1ga234b60967d0b3ef0088ca3ac30755dde" kindref="member">wickr_cipher_result_create</ref>(<ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/><ref refid="structwickr__cipher__result_1a80f15a012dbe1342d0aaa6f3e7072aa9" kindref="member">cipher</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__result_1a741b49cc09cddfce1924e7a26ab8b35b" kindref="member">iv</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__result_1a29fe7c04025f39cc574ac41f846d167a" kindref="member">cipher_text</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__result_1aaaf0227a4c8f3288e221765d6dce371e" kindref="member">auth_tag</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*<ref refid="group__wickr__cipher_1gace82050fcc8b7932df9a9e8109a2fc1d" kindref="member">wickr_cipher_result_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*result);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__cipher_1gad5d22ca53abc4397d88040f0f8003021" kindref="member">wickr_cipher_result_destroy</ref>(<ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>**result);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__wickr__cipher_1ga3f1b679c199987148952816b6fc4c009" kindref="member">wickr_cipher_result_is_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*result);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__cipher_1gacda386115dc52f83a0518f8ac0dad6a2" kindref="member">wickr_cipher_result_serialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*result);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="structwickr__cipher__result" kindref="compound">wickr_cipher_result_t</ref><sp/>*<ref refid="group__wickr__cipher_1gad42314812c457855c3799632494c91a7" kindref="member">wickr_cipher_result_from_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structwickr__cipher__key" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key</ref><sp/>{</highlight></codeline>
<codeline lineno="190" refid="structwickr__cipher__key_1a6506e1a07f7bc2c5ceeb0ca5ce81385b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/><ref refid="structwickr__cipher__key_1a6506e1a07f7bc2c5ceeb0ca5ce81385b" kindref="member">cipher</ref>;</highlight></codeline>
<codeline lineno="191" refid="structwickr__cipher__key_1a0bf9fa22f1db80010410ae609aac8a2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__key_1a0bf9fa22f1db80010410ae609aac8a2a" kindref="member">key_data</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key</ref><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="group__wickr__cipher_1ga73e2a916ba0ff19517e30a65a68390f0" kindref="member">wickr_cipher_key_create</ref>(<ref refid="structwickr__cipher" kindref="compound">wickr_cipher_t</ref><sp/><ref refid="structwickr__cipher__key_1a6506e1a07f7bc2c5ceeb0ca5ce81385b" kindref="member">cipher</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__cipher__key_1a0bf9fa22f1db80010410ae609aac8a2a" kindref="member">key_data</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="group__wickr__cipher_1gaa473bc83f82d6353aa6f4cb4e36bf4f0" kindref="member">wickr_cipher_key_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*key);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__cipher_1ga45790b3023ccb261c03346b069aca763" kindref="member">wickr_cipher_key_destroy</ref>(<ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>**key);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__cipher_1ga8716aebf03497c379d5ff81fe32cde32" kindref="member">wickr_cipher_key_serialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*key);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="structwickr__cipher__key" kindref="compound">wickr_cipher_key_t</ref><sp/>*<ref refid="group__wickr__cipher_1ga1c073b87f2141cf35a1d91ba10f9e5ba" kindref="member">wickr_cipher_key_from_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>cipher_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/cipher.h"/>
  </compounddef>
</doxygen>
