<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kdf_8h" kind="file" language="C++">
    <compoundname>kdf.h</compoundname>
    <includes refid="buffer_8h" local="yes">buffer.h</includes>
    <includes refid="digest_8h" local="yes">digest.h</includes>
    <includedby refid="cipher_8h" local="yes">src/crypto/cipher.h</includedby>
    <includedby refid="ecdh_8h" local="yes">src/crypto/ecdh.h</includedby>
    <includedby refid="crypto__engine_8h" local="yes">src/crypto/crypto_engine.h</includedby>
    <includedby refid="wickr-crypto-c_8h" local="yes">src/crypto/wickr-crypto-c.h</includedby>
    <incdepgraph>
      <node id="279">
        <label>stdbool.h</label>
      </node>
      <node id="276">
        <label>src/crypto/kdf.h</label>
        <link refid="kdf_8h"/>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>stdint.h</label>
      </node>
      <node id="278">
        <label>stdlib.h</label>
      </node>
      <node id="281">
        <label>array.h</label>
        <link refid="array_8h_source"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>limits.h</label>
      </node>
      <node id="283">
        <label>digest.h</label>
        <link refid="digest_8h_source"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="284">
        <label>src/crypto/kdf.h</label>
        <link refid="kdf_8h"/>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="289">
        <label>src/crypto/identity.h</label>
        <link refid="identity_8h_source"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>src/crypto/storage.h</label>
        <link refid="storage_8h_source"/>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="294">
        <label>src/crypto/wickr_ctx.h</label>
        <link refid="wickr__ctx_8h_source"/>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="298">
        <label>src/crypto/stream_cipher.h</label>
        <link refid="stream__cipher_8h_source"/>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="300">
        <label>src/crypto/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>src/crypto/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="287">
        <label>src/crypto/devinfo.h</label>
        <link refid="devinfo_8h_source"/>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="290">
        <label>src/crypto/ephemeral_keypair.h</label>
        <link refid="ephemeral__keypair_8h_source"/>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>src/crypto/root_keys.h</label>
        <link refid="root__keys_8h_source"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>src/crypto/wickr-crypto-c.h</label>
        <link refid="wickr-crypto-c_8h_source"/>
      </node>
      <node id="297">
        <label>src/crypto/protobuf_util.h</label>
        <link refid="protobuf__util_8h_source"/>
      </node>
      <node id="292">
        <label>src/crypto/protocol.h</label>
        <link refid="protocol_8h_source"/>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>src/crypto/cipher.h</label>
        <link refid="cipher_8h_source"/>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="296">
        <label>src/crypto/openssl_suite.h</label>
        <link refid="openssl__suite_8h_source"/>
      </node>
      <node id="299">
        <label>src/crypto/stream_iv.h</label>
        <link refid="stream__iv_8h_source"/>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>src/crypto/crypto_engine.h</label>
        <link refid="crypto__engine_8h_source"/>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwickr__kdf__algo" prot="public">wickr_kdf_algo</innerclass>
    <innerclass refid="structwickr__kdf__meta" prot="public">wickr_kdf_meta</innerclass>
    <innerclass refid="structwickr__kdf__result" prot="public">wickr_kdf_result</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wickr__kdf_1ga5e8df13eb2cd5cc1e09f377675ddc50f" prot="public" static="no">
        <name>SCRYPT_2_17_COST</name>
        <initializer>1116161</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scrypt Cost</para><para>In order to conform to MCF format, scrypt provides a method of compressing its parameters into a single uint32 value. This calculation is leveraged here for the simplicity of having a single value represent N, r, and p values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="92" column="9" bodyfile="src/crypto/kdf.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1aeb300270fb7ca924f7a54413519e4e6d" prot="public" static="no">
        <name>SCRYPT_2_18_COST</name>
        <initializer>1181697</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="93" column="9" bodyfile="src/crypto/kdf.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1a4c4affde5d02bd936b02fd10ae4fb6f7" prot="public" static="no">
        <name>SCRYPT_2_19_COST</name>
        <initializer>1247233</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="94" column="9" bodyfile="src/crypto/kdf.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1aa1f424fbb5032e5d38bc2a3264e5d0a5" prot="public" static="no">
        <name>SCRYPT_2_20_COST</name>
        <initializer>1312769</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="95" column="9" bodyfile="src/crypto/kdf.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1a985d88379865253b78ba26d6809b5d11" prot="public" static="no">
        <name>SCRYPT_OUTPUT_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="98" column="9" bodyfile="src/crypto/kdf.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1aa2897cdcb5834bc30a027653906e8bef" prot="public" static="no">
        <name>SCRYPT_SALT_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="100" column="9" bodyfile="src/crypto/kdf.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1a518bfa8eae96fbdb3ccbca6574f84040" prot="public" static="no">
        <name>BCRYPT_15_COST</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="101" column="9" bodyfile="src/crypto/kdf.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1ac413bcc043e10b704d3fbd33d588a8fc" prot="public" static="no">
        <name>BCRYPT_HASH_SIZE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="102" column="9" bodyfile="src/crypto/kdf.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kdf_8h_1aa08431301b4e7fd5638e67e3be262c51" prot="public" static="no">
        <name>BCRYPT_SALT_SIZE</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="105" column="9" bodyfile="src/crypto/kdf.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__wickr__kdf_1ga106149e3507106abb6b5be843a4e7c16" prot="public" static="no">
        <name>wickr_kdf_algo_id</name>
        <enumvalue id="group__wickr__kdf_1gga106149e3507106abb6b5be843a4e7c16a3dc9d48b37cd34f27f18eb673f0a88fe" prot="public">
          <name>KDF_BCRYPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wickr__kdf_1gga106149e3507106abb6b5be843a4e7c16a600add4b192ee6f9bad59e5195881a49" prot="public">
          <name>KDF_SCRYPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__wickr__kdf_1gga106149e3507106abb6b5be843a4e7c16aac5e432bbfb638c1b7db568cadb49150" prot="public">
          <name>KDF_HMAC_SHA2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>KDF Algorithm ID</para><para>Define the base algorithm a particular kdf function uses. Scrypt, Bcrypt, and HKDF are currently supported. The preferred default is to use scrypt, with a minimum of n = 2^17 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="47" column="1" bodyfile="src/crypto/kdf.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10" prot="public" static="no">
        <name>wickr_kdf_id</name>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a704537a653cca7744b064f5272a4c285" prot="public">
          <name>KDF_ID_SCRYPT_17</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a8eda1c642c773a46646173359c381ab3" prot="public">
          <name>KDF_ID_SCRYPT_18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a5fe88fd735a909b96290b505a47ac537" prot="public">
          <name>KDF_ID_SCRYPT_19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a69671e8869849ee34f843b66b4b2c9d9" prot="public">
          <name>KDF_ID_SCRYPT_20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a1bdcd0ebc171ae34042ef98b86f137c9" prot="public">
          <name>KDF_ID_BCRYPT_15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a419b74788283c994d0720b2e57cee63c" prot="public">
          <name>KDF_ID_HKDF_SHA256</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10a2cb74fb4c2ba4d91cb3a2a74845119e1" prot="public">
          <name>KDF_ID_HKDF_SHA384</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kdf_8h_1a6b419d438a909b27c3a833f53f9d9a10ac4ccae496946d8d8374815eeb561ddca" prot="public">
          <name>KDF_ID_HKDF_SHA512</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="49" column="1" bodyfile="src/crypto/kdf.h" bodystart="49" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="kdf_8h_1a6b97825b550c03e9b81914ac107f7052" prot="public" static="no">
        <type>struct <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo</ref></type>
        <definition>typedef struct wickr_kdf_algo wickr_kdf_algo_t</definition>
        <argsstring></argsstring>
        <name>wickr_kdf_algo_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="112" column="1" bodyfile="src/crypto/kdf.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kdf_8h_1a4c7096f6d908b3745c38f8299a47fa97" prot="public" static="no">
        <type>struct <ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta</ref></type>
        <definition>typedef struct wickr_kdf_meta wickr_kdf_meta_t</definition>
        <argsstring></argsstring>
        <name>wickr_kdf_meta_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="119" column="1" bodyfile="src/crypto/kdf.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kdf_8h_1ac1b7201c2baca27e0b89edd3cf6f13bb" prot="public" static="no">
        <type>struct <ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result</ref></type>
        <definition>typedef struct wickr_kdf_result wickr_kdf_result_t</definition>
        <argsstring></argsstring>
        <name>wickr_kdf_result_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="119" column="1" bodyfile="src/crypto/kdf.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kdf_8h_1ab7c6c86900dd2f85755e984d7493b642" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_SCRYPT_2_17</definition>
        <argsstring></argsstring>
        <name>KDF_SCRYPT_2_17</name>
        <initializer>= { KDF_SCRYPT, KDF_ID_SCRYPT_17, SCRYPT_SALT_SIZE, SCRYPT_OUTPUT_SIZE, <ref refid="group__wickr__kdf_1ga5e8df13eb2cd5cc1e09f377675ddc50f" kindref="member">SCRYPT_2_17_COST</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="108" column="1" bodyfile="src/crypto/kdf.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a3da247c80c6d322f7d7df3ac0b6b76f3" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_SCRYPT_2_18</definition>
        <argsstring></argsstring>
        <name>KDF_SCRYPT_2_18</name>
        <initializer>= { KDF_SCRYPT, KDF_ID_SCRYPT_18, SCRYPT_SALT_SIZE, SCRYPT_OUTPUT_SIZE, SCRYPT_2_18_COST }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="109" column="1" bodyfile="src/crypto/kdf.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a11f38a66b15d49a5e934536b83594420" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_SCRYPT_2_19</definition>
        <argsstring></argsstring>
        <name>KDF_SCRYPT_2_19</name>
        <initializer>= { KDF_SCRYPT, KDF_ID_SCRYPT_19, SCRYPT_SALT_SIZE, SCRYPT_OUTPUT_SIZE, SCRYPT_2_19_COST }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="110" column="1" bodyfile="src/crypto/kdf.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a36395b1a0b79e5d59a1b63ac36465acc" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_SCRYPT_2_20</definition>
        <argsstring></argsstring>
        <name>KDF_SCRYPT_2_20</name>
        <initializer>= { KDF_SCRYPT, KDF_ID_SCRYPT_20, SCRYPT_SALT_SIZE, SCRYPT_OUTPUT_SIZE, SCRYPT_2_20_COST }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="111" column="1" bodyfile="src/crypto/kdf.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a7e875c89475d9212e2e6de25e4d6be0e" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_BCRYPT_15</definition>
        <argsstring></argsstring>
        <name>KDF_BCRYPT_15</name>
        <initializer>= { KDF_BCRYPT, KDF_ID_BCRYPT_15, BCRYPT_SALT_SIZE, BCRYPT_HASH_SIZE, BCRYPT_15_COST }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="114" column="1" bodyfile="src/crypto/kdf.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a850ca0dfd3d5289e88c79d13d077466f" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_HKDF_SHA256</definition>
        <argsstring></argsstring>
        <name>KDF_HKDF_SHA256</name>
        <initializer>= { KDF_HMAC_SHA2, KDF_ID_HKDF_SHA256, SHA256_DIGEST_SIZE, SHA256_DIGEST_SIZE, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="117" column="1" bodyfile="src/crypto/kdf.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a0a3660c24e5ae87a4b0a1da4ef60dfe4" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_HKDF_SHA384</definition>
        <argsstring></argsstring>
        <name>KDF_HKDF_SHA384</name>
        <initializer>= { KDF_HMAC_SHA2, KDF_ID_HKDF_SHA384, SHA384_DIGEST_SIZE, SHA384_DIGEST_SIZE, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="118" column="1" bodyfile="src/crypto/kdf.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kdf_8h_1a593a90f4a69bcd7289e6a1b810ee5660" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
        <definition>const wickr_kdf_algo_t KDF_HKDF_SHA512</definition>
        <argsstring></argsstring>
        <name>KDF_HKDF_SHA512</name>
        <initializer>= { KDF_HMAC_SHA2, KDF_ID_HKDF_SHA512, SHA512_DIGEST_SIZE, SHA512_DIGEST_SIZE, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="119" column="1" bodyfile="src/crypto/kdf.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wickr__kdf_1gaeee99bcfbf94fd964158ac402e2deb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
        <definition>wickr_kdf_meta_t* wickr_kdf_meta_create</definition>
        <argsstring>(wickr_kdf_algo_t algo, wickr_buffer_t *salt, wickr_buffer_t *info)</argsstring>
        <name>wickr_kdf_meta_create</name>
        <param>
          <type><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
          <declname>algo</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a KDF Metadata set from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>algo</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>salt</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated KDF Metadata set, owning the properties that were passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga92020ae3e8ffb469c927d17f95a7dff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t wickr_kdf_meta_size_with_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_kdf_meta_size_with_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the size of serialized metadata given a serialized KDF Metadata buffer</para><para>This function is useful for determining the number of bytes within a larger buffer are part of the KDF metadata</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer beginning with bytes generated from &apos;wickr_kdf_meta_serialize&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes consumed by a piece of serialized metadata at the beginning of buffer &apos;buffer&apos;. 0 if the buffer does not start with a valid piece of serialized metadata </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga1bc501706b4a8a727dfd34f8a00e56da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
        <definition>wickr_buffer_t* wickr_kdf_meta_serialize</definition>
        <argsstring>(const wickr_kdf_meta_t *meta)</argsstring>
        <name>wickr_kdf_meta_serialize</name>
        <param>
          <type>const <ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a KDF Metadata set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata set to serialize to a buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a buffer containing serialized bytes from &apos;meta&apos; in the following format: | ALGO_ID | SALT | </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1gaebd1caf94717c403c4afb5cca8f511b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
        <definition>wickr_kdf_meta_t* wickr_kdf_meta_create_with_buffer</definition>
        <argsstring>(const wickr_buffer_t *buffer)</argsstring>
        <name>wickr_kdf_meta_create_with_buffer</name>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a KDF Metadata set from a buffer created by &apos;wickr_kdf_meta_serialize&apos;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer containing a bytes created by &apos;wickr_kdf_meta_serialize&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated KDF Metadata set. NULL if parsing fails because buffer does not contain valid bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga6ed878108fd58ee420239689de505190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
        <definition>wickr_kdf_meta_t* wickr_kdf_meta_copy</definition>
        <argsstring>(const wickr_kdf_meta_t *source)</argsstring>
        <name>wickr_kdf_meta_copy</name>
        <param>
          <type>const <ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a KDF Metadata set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the metadata set to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated metadata set holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga2bd458ae83d4d5bb03b9d0835baeefd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_kdf_meta_destroy</definition>
        <argsstring>(wickr_kdf_meta_t **meta)</argsstring>
        <name>wickr_kdf_meta_destroy</name>
        <param>
          <type><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> **</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a KDF Metadata set</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the metadata set to destroy. All properties of &apos;*meta&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga514c095b3b2f1ead49bd7fbf0b427407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref> *</type>
        <definition>wickr_kdf_result_t* wickr_kdf_result_create</definition>
        <argsstring>(wickr_kdf_meta_t *meta, wickr_buffer_t *hash)</argsstring>
        <name>wickr_kdf_result_create</name>
        <param>
          <type><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
          <declname>meta</declname>
        </param>
        <param>
          <type><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a KDF Result from components</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>see &apos;<ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result</ref>&apos; property documentation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated KDF result, owning the properties that were passed in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga69c03c94bf446471ba74f76ee883f8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref> *</type>
        <definition>wickr_kdf_result_t* wickr_kdf_result_copy</definition>
        <argsstring>(const wickr_kdf_result_t *source)</argsstring>
        <name>wickr_kdf_result_copy</name>
        <param>
          <type>const <ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a KDF result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the metadata set to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated kdf result holding a deep copy of the properties of &apos;source&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga61ff0036a7257321ff0bbdc184d856a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wickr_kdf_result_destroy</definition>
        <argsstring>(wickr_kdf_result_t **result)</argsstring>
        <name>wickr_kdf_result_destroy</name>
        <param>
          <type><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref> **</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a KDF result</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the result to destroy. All properties of &apos;*result&apos; will also be destroyed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1gabc745cc1349f64c0f25d6d12de5f64cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref> *</type>
        <definition>wickr_kdf_result_t* wickr_perform_kdf</definition>
        <argsstring>(wickr_kdf_algo_t algo, const wickr_buffer_t *passphrase)</argsstring>
        <name>wickr_perform_kdf</name>
        <param>
          <type><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref></type>
          <declname>algo</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute a KDF function given an input buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>algo</parametername>
</parameternamelist>
<parameterdescription>
<para>the algorithm info to use for execution of the KDF </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes to use as input to the KDF function. There are no restrictions for the content of the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output of the KDF function, including the generated random salt that was used for the computation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga69674856e11652a18663fc7f833ad974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref> *</type>
        <definition>wickr_kdf_result_t* wickr_perform_kdf_meta</definition>
        <argsstring>(const wickr_kdf_meta_t *existing_meta, const wickr_buffer_t *passphrase)</argsstring>
        <name>wickr_perform_kdf_meta</name>
        <param>
          <type>const <ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref> *</type>
          <declname>existing_meta</declname>
        </param>
        <param>
          <type>const <ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref> *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute a KDF function given an input buffer and specified parameters</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>existing_meta</parametername>
</parameternamelist>
<parameterdescription>
<para>the parameters to use for execution, including a specific salt </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passphrase</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes to use as input to the KDF function. There are no restrictions for the content of the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output of the KDF function, including the generated random salt that was used for the computation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wickr__kdf_1ga81c7a5adea69d04e019dd58080268a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref> *</type>
        <definition>const wickr_kdf_algo_t* wickr_hkdf_algo_for_digest</definition>
        <argsstring>(wickr_digest_t digest)</argsstring>
        <name>wickr_hkdf_algo_for_digest</name>
        <param>
          <type><ref refid="structwickr__digest" kindref="compound">wickr_digest_t</ref></type>
          <declname>digest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the HKDF <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo</ref> that matches a specific digest</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>the digest to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HKDF <ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo</ref> that uses &apos;digest&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/crypto/kdf.h" line="298" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>©<sp/>2012-2017<sp/>Wickr<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>is<sp/>being<sp/>released<sp/>for<sp/>EDUCATIONAL,<sp/>ACADEMIC,<sp/>AND<sp/>CODE<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/><sp/>COMMERCIAL<sp/>USE<sp/>OF<sp/>THE<sp/>CODE<sp/>IS<sp/>EXPRESSLY<sp/>PROHIBITED.<sp/><sp/>For<sp/>additional<sp/>details,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>please<sp/>see<sp/>LICENSE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>CODE<sp/>IS<sp/>MADE<sp/>AVAILABLE<sp/>&quot;AS-IS&quot;<sp/>AND<sp/>WITHOUT<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>GUARANTEES<sp/>AS<sp/>TO<sp/>FITNESS,<sp/>MERCHANTABILITY,<sp/>NON-</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>INFRINGEMENT<sp/>OR<sp/>OTHERWISE.<sp/>IT<sp/>IS<sp/>NOT<sp/>BEING<sp/>PROVIDED<sp/>IN<sp/>TRADE<sp/>BUT<sp/>ON</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>A<sp/>VOLUNTARY<sp/>BASIS<sp/>ON<sp/>BEHALF<sp/>OF<sp/>THE<sp/>AUTHOR’S<sp/>PART<sp/>FOR<sp/>THE<sp/>BENEFIT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>OF<sp/>THE<sp/>LICENSEE<sp/>AND<sp/>IS<sp/>NOT<sp/>MADE<sp/>AVAILABLE<sp/>FOR<sp/>CONSUMER<sp/>USE<sp/>OR<sp/>ANY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>USE<sp/>OUTSIDE<sp/>THE<sp/>TERMS<sp/>OF<sp/>THIS<sp/>LICENSE.<sp/>ANYONE<sp/>ACCESSING<sp/>THE</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>CODE<sp/>SHOULD<sp/>HAVE<sp/>THE<sp/>REQUISITE<sp/>EXPERTISE<sp/>TO<sp/>SECURE<sp/>THEIR<sp/>SYSTEM</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>AND<sp/>DEVICES<sp/>AND<sp/>TO<sp/>ACCESS<sp/>AND<sp/>USE<sp/>THE<sp/>CODE<sp/>FOR<sp/>REVIEW<sp/>PURPOSES</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>ONLY.<sp/>LICENSEE<sp/>BEARS<sp/>THE<sp/>RISK<sp/>OF<sp/>ACCESSING<sp/>AND<sp/>USING<sp/>THE<sp/>CODE.<sp/>IN</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>PARTICULAR,<sp/>AUTHOR<sp/>BEARS<sp/>NO<sp/>LIABILITY<sp/>FOR<sp/>ANY<sp/>INTERFERENCE<sp/>WITH<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>ADVERSE<sp/>EFFECT<sp/>THAT<sp/>MAY<sp/>OCCUR<sp/>AS<sp/>A<sp/>RESULT<sp/>OF<sp/>THE<sp/>LICENSEE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ACCESSING<sp/>AND/OR<sp/>USING<sp/>THE<sp/>CODE<sp/>ON<sp/>LICENSEE’S<sp/>SYSTEM.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>kdf_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kdf_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;digest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__wickr__kdf_1ga106149e3507106abb6b5be843a4e7c16" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>KDF_BCRYPT,<sp/>KDF_SCRYPT,<sp/>KDF_HMAC_SHA2<sp/>}<sp/><ref refid="group__wickr__kdf_1ga106149e3507106abb6b5be843a4e7c16" kindref="member">wickr_kdf_algo_id</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>KDF_ID_SCRYPT_17<sp/>=<sp/>1,<sp/>KDF_ID_SCRYPT_18,<sp/>KDF_ID_SCRYPT_19,<sp/>KDF_ID_SCRYPT_20,<sp/>KDF_ID_BCRYPT_15,<sp/>KDF_ID_HKDF_SHA256,<sp/>KDF_ID_HKDF_SHA384,<sp/>KDF_ID_HKDF_SHA512<sp/>}<sp/>wickr_kdf_id;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structwickr__kdf__algo" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo</ref><sp/>{</highlight></codeline>
<codeline lineno="72" refid="structwickr__kdf__algo_1a1bc420e2ca0f36169e261205bf6246e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>wickr_kdf_algo_id<sp/><ref refid="structwickr__kdf__algo_1a1bc420e2ca0f36169e261205bf6246e9" kindref="member">algo_id</ref>;</highlight></codeline>
<codeline lineno="73" refid="structwickr__kdf__algo_1a0cf9976901115634ddbb6193b6e326ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>wickr_kdf_id<sp/><ref refid="structwickr__kdf__algo_1a0cf9976901115634ddbb6193b6e326ba" kindref="member">kdf_id</ref>;</highlight></codeline>
<codeline lineno="74" refid="structwickr__kdf__algo_1a9a6ccf9787e16898d1724292dab6593e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwickr__kdf__algo_1a9a6ccf9787e16898d1724292dab6593e" kindref="member">salt_size</ref>;</highlight></codeline>
<codeline lineno="75" refid="structwickr__kdf__algo_1a75e5396b3c53817c6799dbf3107e36d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwickr__kdf__algo_1a75e5396b3c53817c6799dbf3107e36d6" kindref="member">output_size</ref>;</highlight></codeline>
<codeline lineno="76" refid="structwickr__kdf__algo_1a3591ba4f7b6b916381ad28327a67d08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structwickr__kdf__algo_1a3591ba4f7b6b916381ad28327a67d08c" kindref="member">cost</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo</ref><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group__wickr__kdf_1ga5e8df13eb2cd5cc1e09f377675ddc50f" refkind="member"><highlight class="preprocessor">#define<sp/>SCRYPT_2_17_COST<sp/>1116161</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCRYPT_2_18_COST<sp/>1181697</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCRYPT_2_19_COST<sp/>1247233</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCRYPT_2_20_COST<sp/>1312769</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Truncate<sp/>the<sp/>output<sp/>size<sp/>of<sp/>scrypt<sp/>to<sp/>give<sp/>us<sp/>32byte<sp/>values<sp/>we<sp/>can<sp/>use<sp/>as<sp/>a<sp/>cipher<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCRYPT_OUTPUT_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCRYPT_SALT_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCRYPT_15_COST<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCRYPT_HASH_SIZE<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Passed<sp/>without<sp/>the<sp/>$2y$15$.<sp/>It<sp/>will<sp/>be<sp/>injected<sp/>internally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCRYPT_SALT_SIZE<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SCRYPT<sp/>Mode<sp/>Definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_SCRYPT_2_17<sp/>=<sp/>{<sp/>KDF_SCRYPT,<sp/>KDF_ID_SCRYPT_17,<sp/>SCRYPT_SALT_SIZE,<sp/>SCRYPT_OUTPUT_SIZE,<sp/><ref refid="group__wickr__kdf_1ga5e8df13eb2cd5cc1e09f377675ddc50f" kindref="member">SCRYPT_2_17_COST</ref><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_SCRYPT_2_18<sp/>=<sp/>{<sp/>KDF_SCRYPT,<sp/>KDF_ID_SCRYPT_18,<sp/>SCRYPT_SALT_SIZE,<sp/>SCRYPT_OUTPUT_SIZE,<sp/>SCRYPT_2_18_COST<sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_SCRYPT_2_19<sp/>=<sp/>{<sp/>KDF_SCRYPT,<sp/>KDF_ID_SCRYPT_19,<sp/>SCRYPT_SALT_SIZE,<sp/>SCRYPT_OUTPUT_SIZE,<sp/>SCRYPT_2_19_COST<sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_SCRYPT_2_20<sp/>=<sp/>{<sp/>KDF_SCRYPT,<sp/>KDF_ID_SCRYPT_20,<sp/>SCRYPT_SALT_SIZE,<sp/>SCRYPT_OUTPUT_SIZE,<sp/>SCRYPT_2_20_COST<sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BCRYPT<sp/>Mode<sp/>Definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_BCRYPT_15<sp/>=<sp/>{<sp/>KDF_BCRYPT,<sp/>KDF_ID_BCRYPT_15,<sp/>BCRYPT_SALT_SIZE,<sp/>BCRYPT_HASH_SIZE,<sp/>BCRYPT_15_COST<sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>HKDF<sp/>Mode<sp/>Definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_HKDF_SHA256<sp/>=<sp/>{<sp/>KDF_HMAC_SHA2,<sp/>KDF_ID_HKDF_SHA256,<sp/>SHA256_DIGEST_SIZE,<sp/>SHA256_DIGEST_SIZE,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_HKDF_SHA384<sp/>=<sp/>{<sp/>KDF_HMAC_SHA2,<sp/>KDF_ID_HKDF_SHA384,<sp/>SHA384_DIGEST_SIZE,<sp/>SHA384_DIGEST_SIZE,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>KDF_HKDF_SHA512<sp/>=<sp/>{<sp/>KDF_HMAC_SHA2,<sp/>KDF_ID_HKDF_SHA512,<sp/>SHA512_DIGEST_SIZE,<sp/>SHA512_DIGEST_SIZE,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structwickr__kdf__meta" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta</ref><sp/>{</highlight></codeline>
<codeline lineno="136" refid="structwickr__kdf__meta_1a263e1f7c77447a5a2a57c0d5d2f4ee34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/><ref refid="structwickr__kdf__meta_1a263e1f7c77447a5a2a57c0d5d2f4ee34" kindref="member">algo</ref>;</highlight></codeline>
<codeline lineno="137" refid="structwickr__kdf__meta_1a315c54ee4578a01266a4e7352a52d459" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__kdf__meta_1a315c54ee4578a01266a4e7352a52d459" kindref="member">salt</ref>;</highlight></codeline>
<codeline lineno="138" refid="structwickr__kdf__meta_1abf3edef445c8849c356d1282e49033f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__kdf__meta_1abf3edef445c8849c356d1282e49033f4" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta</ref><sp/><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structwickr__kdf__result" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result</ref><sp/>{</highlight></codeline>
<codeline lineno="156" refid="structwickr__kdf__result_1a8cf0778f7cb1a157ba3f44f34cbcd92e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*<ref refid="structwickr__kdf__result_1a8cf0778f7cb1a157ba3f44f34cbcd92e" kindref="member">meta</ref>;</highlight></codeline>
<codeline lineno="157" refid="structwickr__kdf__result_1a9b637f293f3243897f9e472b6ad06c21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__kdf__result_1a9b637f293f3243897f9e472b6ad06c21" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result</ref><sp/><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*<ref refid="group__wickr__kdf_1gaeee99bcfbf94fd964158ac402e2deb48" kindref="member">wickr_kdf_meta_create</ref>(<ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>algo,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*salt,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*info);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">uint8_t<sp/><ref refid="group__wickr__kdf_1ga92020ae3e8ffb469c927d17f95a7dff1" kindref="member">wickr_kdf_meta_size_with_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="group__wickr__kdf_1ga1bc501706b4a8a727dfd34f8a00e56da" kindref="member">wickr_kdf_meta_serialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*<ref refid="structwickr__kdf__result_1a8cf0778f7cb1a157ba3f44f34cbcd92e" kindref="member">meta</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*<ref refid="group__wickr__kdf_1gaebd1caf94717c403c4afb5cca8f511b6" kindref="member">wickr_kdf_meta_create_with_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*<ref refid="group__wickr__kdf_1ga6ed878108fd58ee420239689de505190" kindref="member">wickr_kdf_meta_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__kdf_1ga2bd458ae83d4d5bb03b9d0835baeefd7" kindref="member">wickr_kdf_meta_destroy</ref>(<ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>**<ref refid="structwickr__kdf__result_1a8cf0778f7cb1a157ba3f44f34cbcd92e" kindref="member">meta</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref><sp/>*<ref refid="group__wickr__kdf_1ga514c095b3b2f1ead49bd7fbf0b427407" kindref="member">wickr_kdf_result_create</ref>(<ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*<ref refid="structwickr__kdf__result_1a8cf0778f7cb1a157ba3f44f34cbcd92e" kindref="member">meta</ref>,<sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*<ref refid="structwickr__kdf__result_1a9b637f293f3243897f9e472b6ad06c21" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref><sp/>*<ref refid="group__wickr__kdf_1ga69c03c94bf446471ba74f76ee883f8d4" kindref="member">wickr_kdf_result_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref><sp/>*source);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wickr__kdf_1ga61ff0036a7257321ff0bbdc184d856a3" kindref="member">wickr_kdf_result_destroy</ref>(<ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref><sp/>**result);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref><sp/>*<ref refid="group__wickr__kdf_1gabc745cc1349f64c0f25d6d12de5f64cd" kindref="member">wickr_perform_kdf</ref>(<ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>algo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="structwickr__kdf__result" kindref="compound">wickr_kdf_result_t</ref><sp/>*<ref refid="group__wickr__kdf_1ga69674856e11652a18663fc7f833ad974" kindref="member">wickr_perform_kdf_meta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__meta" kindref="compound">wickr_kdf_meta_t</ref><sp/>*existing_meta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__buffer" kindref="compound">wickr_buffer_t</ref><sp/>*passphrase);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwickr__kdf__algo" kindref="compound">wickr_kdf_algo_t</ref><sp/>*<ref refid="group__wickr__kdf_1ga81c7a5adea69d04e019dd58080268a08" kindref="member">wickr_hkdf_algo_for_digest</ref>(<ref refid="structwickr__digest" kindref="compound">wickr_digest_t</ref><sp/>digest);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>kdf_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/crypto/kdf.h"/>
  </compounddef>
</doxygen>
