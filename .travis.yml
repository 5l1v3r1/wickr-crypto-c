language: c
os: linux
dist: bionic
node_js:
  - "10"

env:
  global:
    - secure: "IQxHT3BNaaNeKhqx08zsVW2we5oh3bjlKIVsIaYkN5CSM4ErVEFV5lncXloHXN5RtNxpZ0I3Mo11MuwF5LH+/4K9j37a4pQgU6R66Ok7OyanWYcPPfQLwXfQIO1/SD/NKgSGp6ob1C2wxLno040BHUOEf92wrNUxBJe6wwGBE6kuo5IuE+73lySI2rwacEu5Op0B2X1/SgpDF9Y5e31kZw6jh65jDh/slMJnzl5/R7X/VC7eDY9JfM18/4JMnuVY0Larzo5Zu5bCABXBhywMaEaUCFWnWP4PYu4ato697zBGOToppR2EH15lu8pD3HxPp0IR3SfsPjIdKt+nXkWFvJdZMS533GK1FZV6AaZxNFV+7nly6jnGndDdA9/y8oNs6tc0AKaKbAp378n1bNMY26cUfs+lZmzv24PYuob8q/kO6X2r1BTavZ5ScRGrKibtwZ/WLpVOuo/2hZxDdHc2UatlgTXL3f38ptD5HdPiLfMKfXmVaJVP2PMYudfwCoDXkbtNrQYWL86FwjC0BA7/kjZivNeMrt4uWP8RLpjTvXRtjUgqQRWZaok99eamQ0z9Yf+ehoSTTO3Aevv0qyD19Dopd/qEJnt+K/zBhQFbX61/MA46rE9orn2HJMOlabTaQTmZxE9cdobWwwbZWaTIhvfgQJHeOmZF6zdtuASvJ+M="
    - secure: "UNweCnb3OYt0KsLkACJeqMvUkD7Afb0+bgW6GnZT27R9OgYruMvthRWUTZ3m8AkXlME5+LYbTatXUyDCxpysyoZfLzZLekgw9mU1GUsXAWRqK2QSOcMzpfg6aNYnhEJdTz8+5ansByaapuzvvYuwMDKF92Sbwar5j1y3HvwSIyZAKI+hIC5wwH5EVGiseomAHuNGZ7SXBfHKH03LxnePAjssGxLkC5eMm2W0PbLBT2EghWGEKqEUrNCSEPCxsxMFiOxHXVfL4OrgdQLNHmCOnQrWIXlx+Bm5PqEFQx5O/G9l7OqzudOyjRB1k+geuJ4mzmxzA1dAFWe2jtVQnmEHnX7Q2BhY0RngMsohkQtkvclPG4Nl2JvBpEo9bg+E6fnkG87PMklz40eKktdKwm0xXf+twYDEUs/S7bbzgOXr4bvk/yMqjn0VJN34s/wVZpVkr/osf0S6+OZKx0SixLWw1t39nqK68RXxgk4GYyCcV9EKa1DqYIABX3QSADWKWuq+bOg3kOhhUZaAZateiaKCKTEMVxpE+RO+O9FlH79I4v4g85JYFtopAz9FfWBLhh14bLPrY5aAmyi/jP7ccED0p7c3ela+6NgTUJSNRXBj90BbJUsoUAMjsxTRap9Tq3V51ooxE9VErOSiQX8HzHicGhRB0t7rqXVgOw+beJCn4rE="
     
services:
  - docker

jobs:
  include:
  - os: linux
    dist: bionic
    env:
      - OPENSSL="1.1.0"
      - FIPS=FALSE
  - os: linux
    dist: bionic
    env:
      - OPENSSL="BUILD"
      - FIPS=FALSE
  - os: linux
    dist: bionic
    env:
      - OPENSSL="BUILD"
      - FIPS=TRUE
  - os: osx
    osx_image: xcode11
    env:
      - FIPS=FALSE
  - os: osx
    osx_image: xcode11
    env:
      - FIPS=TRUE
  - os: osx
    osx_image: xcode11
    env:
      - IOS=true
      - FIPS=false
  - os: osx
    osx_image: xcode11
    env:
      - IOS=true
      - FIPS=true
  - os: linux 
    dist: bionic
    env:
      - ANDROID=true
  - os: linux 
    dist: bionic
    env:
      - ANDROID=true
      - FIPS=true
  - os: linux
    dist: bionic
    env:
      - NODE=true
  - os: linux
    dist: bionic
    if: tag IS present
    env:
      - NODE_DISTRO=true
  - os: osx
    osx_image: xcode11
    env:
      - NODE=true
  - os: linux
    jdk: oraclejdk8
    env:
      - JAVA=true
      - FIPS=false
  - os: osx
    jdk: oraclejdk8
    osx_image: xcode11
    env:
      - JAVA=true
      - FIPS=false

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$OPENSSL" == "BUILD" ]]; then export LOCAL_OPTIONS="-DBUILD_OPENSSL=true"; fi
  - if [[ "${NODE}" == "true" || "${JAVA}" == "true" ]]; then git clone https://github.com/swig/swig.git; cd swig; git checkout -t origin/rel-4.0.0; ./autogen.sh; ./configure; make -j2 && sudo make install; cd ../; fi
  - if [[ "${JAVA}" == "true" ]]; then export LOCAL_OPTIONS="-DBUILLD_JAVA=true"; fi
  - if [[ "${IOS}" == "true" ]]; then export LOCAL_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=../Toolchain-iOS.cmake"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$NODE" == "true" ]]; then nvm install 10; fi

script:
  - |
      if [[ ! -z "${ANDROID}" ]]; then
        ./build_android_docker.sh
      elif [[ ! -z "${NODE}" ]]; then

        npm install --build-from-source
        npm test
      elif [[ ! -z "${NODE_DISTRO}" ]]; then
        ./build_node_dist.sh
      else
        mkdir build && cd build
        cmake ${LOCAL_OPTIONS} -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=true -DFIPS=${FIPS} -DBUILD_TESTS=true ../
        make 
        if [[ -z "${IOS}" ]]; then make test; fi
      fi



