.DEFAULT_GOAL := release

DIR := ${CURDIR}
WICKR_CRYPTO_IOS = build-ios
WICKR_CRYPTO_IOS_DEB = $(WICKR_CRYPTO_IOS)/Debug
WICKR_CRYPTO_IOS_REL = $(WICKR_CRYPTO_IOS)/Release

#################################################################
# Please change these as is appropriate for your environment
#
# This is the location where files are installed
INSTALL_PREFIX=$(DIR)/../localRepo/wickr-crypto/ios


#################################################################
# Release build

$(WICKR_CRYPTO_IOS_REL):
	mkdir -p $(WICKR_CRYPTO_IOS_REL)


$(WICKR_CRYPTO_IOS_REL)/armv7/Makefile:
	$(call cmake_create,armv7,Release,OS)

$(WICKR_CRYPTO_IOS_REL)/armv7/lib/libwickr_crypto_lib.a: $(WICKR_CRYPTO_IOS_REL)/armv7/Makefile
	$(call cmake_build,armv7,Release)

armv7: $(WICKR_CRYPTO_IOS_REL)/armv7/lib/libwickr_crypto_lib.a



$(WICKR_CRYPTO_IOS_REL)/arm64/Makefile:
	$(call cmake_create,arm64,Release,OS)

$(WICKR_CRYPTO_IOS_REL)/arm64/lib/libwickr_crypto_lib.a: $(WICKR_CRYPTO_IOS_REL)/arm64/Makefile
	$(call cmake_build,arm64,Release)

arm64: $(WICKR_CRYPTO_IOS_REL)/arm64/lib/libwickr_crypto_lib.a



$(WICKR_CRYPTO_IOS_REL)/x86_64/Makefile:
	$(call cmake_create,x86_64,Release,SIMULATOR64)

$(WICKR_CRYPTO_IOS_REL)/x86_64/lib/libwickr_crypto_lib.a: $(WICKR_CRYPTO_IOS_REL)/x86_64/Makefile
	$(call cmake_build,x86_64,Release)

x86_64: $(WICKR_CRYPTO_IOS_REL)/x86_64/lib/libwickr_crypto_lib.a


release: armv7 arm64 x86_64


armv7.install: $(WICKR_CRYPTO_IOS_REL)/armv7/lib/libwickr_crypto_lib.a
	$(call cmake_install,armv7,Release)

arm64.install: $(WICKR_CRYPTO_IOS_REL)/arm64/lib/libwickr_crypto_lib.a
	$(call cmake_install,arm64,Release)

x86_64.install: $(WICKR_CRYPTO_IOS_REL)/x86_64/lib/libwickr_crypto_lib.a
	$(call cmake_install,x86_64,Release)

install: armv7.install arm64.install x86_64.install


#################################################################
# Debug build

$(WICKR_CRYPTO_IOS_DEB):
	mkdir -p $(WICKR_CRYPTO_IOS_DEB)


$(WICKR_CRYPTO_IOS_DEB)/armv7/Makefile:
	$(call cmake_create,armv7,Debug,OS)

$(WICKR_CRYPTO_IOS_DEB)/armv7/lib/libwickr_crypto_lib.a: $(WICKR_CRYPTO_IOS_DEB)/armv7/Makefile
	$(call cmake_build,armv7,Debug)

debug.armv7: $(WICKR_CRYPTO_IOS_DEB)/armv7/lib/libwickr_crypto_lib.a



$(WICKR_CRYPTO_IOS_DEB)/arm64/Makefile:
	$(call cmake_create,arm64,Debug,OS)

$(WICKR_CRYPTO_IOS_DEB)/arm64/lib/libwickr_crypto_lib.a: $(WICKR_CRYPTO_IOS_DEB)/arm64/Makefile
	$(call cmake_build,arm64,Debug)

debug.arm64: $(WICKR_CRYPTO_IOS_DEB)/arm64/lib/libwickr_crypto_lib.a



$(WICKR_CRYPTO_IOS_DEB)/x86_64/Makefile:
	$(call cmake_create,x86_64,Debug,SIMULATOR64)

$(WICKR_CRYPTO_IOS_DEB)/x86_64/lib/libwickr_crypto_lib.a: $(WICKR_CRYPTO_IOS_DEB)/x86_64/Makefile
	$(call cmake_build,x86_64,Debug)

debug.x86_64: $(WICKR_CRYPTO_IOS_DEB)/x86_64/lib/libwickr_crypto_lib.a


debug: debug.armv7 debug.arm64 debug.x86_64


debug.armv7.install: $(WICKR_CRYPTO_IOS_DEB)/armv7/lib/libwickr_crypto_lib.a
	$(call cmake_install,armv7,Debug)

debug.arm64.install: $(WICKR_CRYPTO_IOS_DEB)/arm64/lib/libwickr_crypto_lib.a
	$(call cmake_install,arm64,Debug)

debug.x86_64.install: $(WICKR_CRYPTO_IOS_DEB)/x86_64/lib/libwickr_crypto_lib.a
	$(call cmake_install,x86_64,Debug)

debug.install: debug.armv7.install debug.arm64.install debug.x86_64.install


#################################################################
#
clean:
	rm -rf $(WICKR_CRYPTO_IOS_REL)
	rm -rf $(WICKR_CRYPTO_IOS_DEB)


define cmake_create
	mkdir -p $(WICKR_CRYPTO_IOS)/$(2)/$(1);
	cd $(WICKR_CRYPTO_IOS)/$(2)/$(1); \
	cmake -DIOS_PLATFORM=$(3) \
	-DIOS_ARCH=$(1) \
	-DCMAKE_BUILD_TYPE=$(2) \
	-DCMAKE_SYSTEM_NAME=iOS \
	-DCMAKE_TOOLCHAIN_FILE=$(DIR)/Toolchain-iOS.cmake \
	-DCMAKE_INSTALL_PREFIX=$(INSTALL_PREFIX)/$(2)/$(1) \
	../../..;
endef

define cmake_build
	cd $(WICKR_CRYPTO_IOS)/$(2)/$(1); cmake --build . ;
endef

define cmake_install
	cd $(WICKR_CRYPTO_IOS)/$(2)/$(1); \
	cmake -DCMAKE_INSTALL_CONFIG_NAME=$(2) -DCMAKE_TOOLCHAIN_FILE=$(DIR)/Toolchain-iOS.cmake -P cmake_install.cmake
endef
